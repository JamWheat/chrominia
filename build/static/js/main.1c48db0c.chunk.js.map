{"version":3,"sources":["components/NavBar/NavBar.jsx","services/tokenService.js","services/authService.js","components/SignupForm/SignupForm.jsx","pages/Signup/Signup.jsx","pages/Login/Login.jsx","services/images-api.js","pages/AddImage/AddImage.jsx","services/projects-api.js","pages/AddProject/AddProject.jsx","services/supplies-api.js","pages/AddSupply/AddSupply.jsx","pages/AllSupplies/AllSupplies.jsx","pages/EditImage/EditImage.jsx","pages/EditProfile/EditProfile.jsx","components/SupplyTable/SupplyTable.jsx","components/AttachImageCard/AttachImageCard.jsx","pages/EditProject/EditProject.jsx","components/ImageCard/ImageCard.jsx","pages/Gallery/Gallery.jsx","pages/LandingPage/LandingPage.jsx","services/userService.js","pages/ProfilePage/ProfilePage.jsx","pages/ProjectDetails/ProjectDetails.jsx","components/ProjectCard/ProjectCard.jsx","pages/Projects/Projects.jsx","pages/ViewImage/ViewImage.jsx","pages/ViewWishList/ViewWishList.jsx","pages/SupplyDetails/SupplyDetails.jsx","pages/AddWishList/AddWishList.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["NavBar","user","handleLogout","Navbar","className","Brand","href","style","height","src","alt","Nav","Link","_id","name","onClick","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","getUserFromToken","removeToken","signup","fetch","BASE_URL","method","headers","Headers","body","stringify","then","res","console","log","json","Error","err","tokenService","getUser","logout","login","creds","ok","SignupForm","state","email","password","passwordConf","handleChange","e","props","updateMessage","setState","target","value","handleSubmit","a","history","handleSignupOrLogin","preventDefault","authService","push","message","this","Form","autoComplete","onSubmit","Label","htmlFor","Group","controlId","Control","type","onChange","Button","id","disabled","isFormInvalid","to","Component","Signup","msg","LoginPage","pw","alert","placeholder","create","image","mode","getForUser","deleteOne","update","AddImage","invalidForm","formData","title","description","url","formRef","React","createRef","handleAddImage","newImageData","imageAPI","current","checkValidity","ref","padding","required","project","deleteProject","attachImage","attachSupply","removeSupply","removeImage","AddProject","hobby","public","completed","dateStarted","targetDate","handleAddProject","newProjectData","projectAPI","as","rows","cols","supply","wishlist","wishList","ownSupply","AddSupply","paintType","size","color","brand","handleAddSupply","newSupplyData","supplyAPI","AllSupplies","supplies","pullSupply","filter","each","pathname","width","EditImage","location","handleUpdateImage","updatedImageData","EditProfile","handleUpdateUser","icon","SupplyTable","tableVisible","hasSupply","supID","result","forEach","s","toggleVisiableClickHandler","Table","striped","bordered","hover","variant","map","idx","key","own","handleRemoveSupply","projectID","handleAttachSupply","AttachImageCard","hasImage","images","imgID","i","handleRemoveImage","handleAttachImage","types","EditProject","handleUpdateProject","projectUpdate","imageID","boop","find","updatedProject","supplyID","findIndex","splice","Container","margin","Row","Col","ImageCard","Gallery","match","params","LandingPage","showProfile","getAllUsers","Authorization","ProfilePage","profile","createdAt","userAPI","slice","ProjectDetails","handleDeleteProject","ProjectCard","Card","Body","Title","Img","length","Text","Project","projects","ViewImage","handleDeleteImage","ViewWishList","handleOwnSupply","handleDeleteSupply","align","SupplyDetails","handleWishListSupply","printType","allSupplies","AddWishList","newWishListData","App","updatedUserData","userService","exact","path","render","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"ipBAgCeA,EA5BA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACtB,OACE,oCACGD,EACC,kBAACE,EAAA,EAAD,CAAQC,UAAU,OAChB,kBAACD,EAAA,EAAOE,MAAR,CAAcD,UAAU,OAAOE,KAAK,KAClC,yBAAKC,MAAO,CAAEC,OAAQ,QAAUC,IAAI,wBAAwBC,IAAI,oBAElE,kBAACC,EAAA,EAAIC,KAAL,CAAUN,KAAI,mBAAcL,EAAKY,MAAjC,YAAmDZ,EAAKa,MACxD,kBAACH,EAAA,EAAIC,KAAL,CAAUN,KAAI,oBAAeL,EAAKY,MAAlC,YACA,kBAACF,EAAA,EAAIC,KAAL,CAAUN,KAAI,mBAAcL,EAAKY,MAAjC,WACA,kBAACF,EAAA,EAAIC,KAAL,CAAUN,KAAK,gBAAf,YACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,iBAAf,aACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,IAAIS,QAASb,GAA5B,YAGF,kBAACC,EAAA,EAAD,CAAQC,UAAU,OAChB,6BAAK,uBAAGE,KAAK,SAASF,UAAU,YAA3B,WACL,6BAAK,uBAAGE,KAAK,KACX,yBAAKC,MAAO,CAAEC,OAAQ,QAAUC,IAAI,wBAAwBC,IAAI,qBAElE,6BAAK,uBAAGJ,KAAK,UAAUF,UAAU,YAA5B,e,QCrBf,SAASY,IACP,IAAIC,EAAQC,aAAaC,QAAQ,SAC7BF,IAEcG,KAAKC,MAAMC,KAAKL,EAAMM,MAAM,KAAK,KAErCC,IAAMC,KAAKC,MAAQ,MAC7BR,aAAaS,WAAW,SACxBV,EAAQ,OAGZ,OAAOA,EAYM,OACbW,SA5BF,SAAkBX,GAChBC,aAAaW,QAAQ,QAASZ,IA4B9BD,WACAc,iBAZF,WACE,IAAMb,EAAQD,IACd,OAAOC,EAAQG,KAAKC,MAAMC,KAAKL,EAAMM,MAAM,KAAK,KAAKtB,KAAO,MAW5D8B,YARF,WACEb,aAAaS,WAAW,WCsBX,OACbK,OA3CF,SAAgB/B,GACd,OAAOgC,MAAMC,mBAAqB,CAChCC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CAAC,eAAgB,qBACtCC,KAAMlB,KAAKmB,UAAUtC,KAEtBuC,MAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,EAAK,uBACVA,EAAIG,UAEZJ,MAAK,SAAAI,GACJ,GAAGA,EAAK3B,MAAO,OAAO2B,EAEtB,MADAF,QAAQC,IAAIC,EAAM,iBACZ,IAAIC,MAAJ,UAAaD,EAAKE,SAEzBN,MAAK,YAAgB,IAAbvB,EAAY,EAAZA,MACP8B,EAAanB,SAASX,OA4BxB+B,QAxBF,WACE,OAAOD,EAAajB,oBAwBpBmB,OArBF,WACEF,EAAahB,eAqBbmB,MAlBF,SAAeC,GACb,OAAOlB,MAAMC,kBAAoB,CAC/BC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CAAE,eAAgB,qBACvCC,KAAMlB,KAAKmB,UAAUY,KAEtBX,MAAK,SAACC,GAEL,GAAIA,EAAIW,GAAI,OAAOX,EAAIG,OACvB,MAAM,IAAIC,MAAM,uBAEjBL,MAAK,gBAAGvB,EAAH,EAAGA,MAAH,OAAe8B,EAAanB,SAASX,Q,eCsD9BoC,G,kNAzFbC,MAAQ,CACNxC,KAAM,GACNyC,MAAO,GACPC,SAAU,GACVC,aAAc,I,EAGhBC,aAAe,SAACC,GACd,EAAKC,MAAMC,cAAc,IACzB,EAAKC,SAAL,eACGH,EAAEI,OAAOjD,KAAO6C,EAAEI,OAAOC,S,EAI9BC,a,uCAAe,WAAON,GAAP,qBAAAO,EAAA,+DAC2C,EAAKN,MAArDO,EADK,EACLA,QAASN,EADJ,EACIA,cAAeO,EADnB,EACmBA,oBAChCT,EAAEU,iBAFW,kBAILC,EAAYtC,OAAO,EAAKsB,OAJnB,OAMXc,IACAD,EAAQI,KAAK,KAPF,gDASXV,EAAc,KAAIW,SATP,yD,oHAaE,IAAD,EACkCC,KAAKnB,MAA7CxC,EADM,EACNA,KAAMyC,EADA,EACAA,MAAOC,EADP,EACOA,SAAUC,EADjB,EACiBA,aAC/B,QAAS3C,GAAQyC,GAASC,IAAaC,K,+BAG/B,IAAD,EACyCgB,KAAKnB,MAA7CxC,EADD,EACCA,KAAMyC,EADP,EACOA,MAAOC,EADd,EACcA,SAAUC,EADxB,EACwBA,aAC/B,OACE,yBAAKrD,UAAU,YACb,uCACA,kBAACsE,EAAA,EAAD,CAAMC,aAAa,MAAMC,SAAUH,KAAKR,cACtC,kBAACS,EAAA,EAAKG,MAAN,CAAYC,QAAQ,QAApB,QACA,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,UAAU,QACpB,kBAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLP,aAAa,MACbX,MAAOlD,EACPA,KAAK,OACLqE,SAAUV,KAAKf,gBAGnB,kBAACgB,EAAA,EAAKG,MAAN,CAAYC,QAAQ,SAApB,SACA,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,UAAU,SACpB,kBAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLP,aAAa,MACbX,MAAOT,EACPzC,KAAK,QACLqE,SAAUV,KAAKf,gBAGnB,kBAACgB,EAAA,EAAKG,MAAN,CAAYC,QAAQ,YAApB,YACA,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,UAAU,YACpB,kBAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,WACLP,aAAa,MACbX,MAAOR,EACP1C,KAAK,WACLqE,SAAUV,KAAKf,gBAGnB,kBAACgB,EAAA,EAAKG,MAAN,CAAYC,QAAQ,WAApB,oBACA,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,UAAU,WACpB,kBAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,WACLP,aAAa,MACbX,MAAOP,EACP3C,KAAK,eACLqE,SAAUV,KAAKf,gBAGnB,yBAAKtD,UAAU,cACb,kBAACgF,EAAA,EAAD,CAAQF,KAAK,SAAS9E,UAAU,cAAciF,GAAG,SAASC,SAAUb,KAAKc,iBAAzE,WADF,WAGA,kBAAC,IAAD,CAAMC,GAAG,IAAIpF,UAAU,YAAYiF,GAAG,UAAtC,iB,GAlFeI,cCeVC,E,4MAlBbpC,MAAQ,CACNkB,QAAS,I,EAGXX,cAAgB,SAAC8B,GACf,EAAK7B,SAAS,CAAEU,QAASmB,K,uDAIzB,OACE,8BACE,kBAAC,EAAD,iBAAgBlB,KAAKb,MAArB,CAA4BC,cAAeY,KAAKZ,iBAChD,2BAAIY,KAAKnB,MAAMkB,c,GAbFiB,aC4ENG,G,kNAtEbtC,MAAQ,CACNC,MAAO,GACPsC,GAAI,I,EAGNnC,aAAe,SAACC,GACd,EAAKG,SAAL,eACGH,EAAEI,OAAOjD,KAAO6C,EAAEI,OAAOC,S,EAI9BC,a,uCAAe,WAAON,GAAP,mBAAAO,EAAA,+DAC4B,EAAKN,MAAtCO,EADK,EACLA,QAASC,EADJ,EACIA,oBACjBT,EAAEU,iBAFW,kBAILC,EAAYpB,MAAM,EAAKI,OAJlB,OAMXc,IACAD,EAAQI,KAAK,KAPF,gDAUXuB,MAAM,wBAVK,yD,6GAcL,IAAD,EACerB,KAAKnB,MAAnBC,EADD,EACCA,MAAOsC,EADR,EACQA,GACf,OACE,oCACE,wBAAIR,GAAG,YAAP,UACA,0BAAMjF,UAAU,SACd,kBAACsE,EAAA,EAAD,CAAME,SAAUH,KAAKR,cACnB,kBAACS,EAAA,EAAKK,MAAN,CAAYJ,aAAa,MAAMK,UAAU,SACvC,kBAACN,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKO,QAAN,CACEC,KAAK,QACLa,YAAY,cACZpB,aAAa,MACbX,MAAOT,EACPzC,KAAK,QACLqE,SAAUV,KAAKf,gBAInB,kBAACgB,EAAA,EAAKK,MAAN,CAAYJ,aAAa,MAAMK,UAAU,YACvC,kBAACN,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKO,QAAN,CACEC,KAAK,WACLa,YAAY,WACZpB,aAAa,MACbX,MAAO6B,EACP/E,KAAK,KACLqE,SAAUV,KAAKf,gBAGnB,yBAAKtD,UAAU,cACb,kBAACgF,EAAA,EAAD,CAAQhF,UAAU,cAAciF,GAAG,SAASH,KAAK,UAAjD,UADF,eAIF,kBAAC,IAAD,CAAM9E,UAAU,YAAYiF,GAAG,SAASG,GAAG,KAA3C,kB,GA5DcC,c,gBCLjB,SAASO,EAAOC,GACrB,OAAOhE,MAHQ,eAGQ,CACnBE,OAAQ,OACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAU0D,IACtB,CAAEC,KAAM,SACN1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGhB,SAASuD,EAAWd,GACzB,OAAOpD,MAAM,GAAD,OAZG,eAYH,gBAAoBoD,GAAM,GAEnC,CAACa,KAAM,SACT1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAQZ,SAASwD,EAAUf,GACxB,OAAOpD,MAAM,GAAD,OAxBG,gBAwBH,OAAeoD,GAAM,CAC7BlD,OAAQ,SACRC,QAAS,CAAC,cAAiB,UAAYW,EAAa/B,aACrD,CAACkF,KAAM,SACT1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGZ,SAASyD,EAAOJ,GACrB,OAAOhE,MAAM,GAAD,OAhCG,gBAgCH,OAAegE,EAAMpF,KAAO,CACpCsB,OAAQ,MACRC,QAAS,CAAC,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACxFsB,KAAMlB,KAAKmB,UAAU0D,IACtB,CAACC,KAAM,SACT1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,U,UCuCJ0D,E,4MAtEbhD,MAAQ,CACN2C,MAAO,GACPM,aAAa,EACbC,SAAU,CACRC,MAAO,GACPC,YAAa,GACbC,IAAK,K,EAITC,QAAUC,IAAMC,Y,EAEhBC,e,uCAAiB,WAAMC,GAAN,SAAA9C,EAAA,sEACT+C,EAAgBD,GACnBxE,MAAK,kBAAM,EAAKoB,MAAMO,QAAQI,KAAnB,mBAAoC,EAAKX,MAAM3D,KAAKY,SAFnD,2C,wDAKjBoD,aAAe,SAAAN,GACbA,EAAEU,iBACF,EAAK0C,eAAe,EAAKzD,MAAMkD,W,EAGjC9C,aAAe,SAAAC,GACb,IAAM6C,EAAQ,2BAAQ,EAAKlD,MAAMkD,UAAnB,kBAA8B7C,EAAEI,OAAOjD,KAAO6C,EAAEI,OAAOC,QACrE,EAAKF,SAAS,CACZ0C,WACAD,aAAc,EAAKK,QAAQM,QAAQC,mB,uDAKrC,OACE,oCACE,4CACA,yBAAK/G,UAAU,oBACb,kBAACgF,EAAA,EAAD,CAAQ9E,KAAI,mBAAcmE,KAAKb,MAAM3D,KAAKY,KAAOT,UAAU,eAAeiF,GAAG,UAA7E,WAIF,yBAAKjF,UAAU,YACb,kBAACsE,EAAA,EAAD,CAAM0C,IAAK3C,KAAKmC,QAAShC,SAAUH,KAAKR,cACtC,6BACE,kBAACS,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,eACA,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,QAAQoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASC,MAAOtB,SAAUV,KAAKf,aAAc4D,UAAQ,KAEhH,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,qBACA,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,cAAcoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASE,YAAavB,SAAUV,KAAKf,aAAc4D,UAAQ,KAE5H,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,aACA,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,MAAMoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASG,IAAKxB,SAAUV,KAAKf,aAAc4D,UAAQ,KAE5G,yBAAKlH,UAAU,cACb,kBAACgF,EAAA,EAAD,CACEhF,UAAU,cACViF,GAAG,SACHH,KAAK,SACLI,SAAUb,KAAKnB,MAAMiD,aAJvB,qB,GAvDSd,aCHhB,SAASO,EAAOuB,GACnB,OAAOtF,MAHM,iBAGU,CACnBE,OAAQ,OACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAUgF,IACtB,CAAErB,KAAM,SACN1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAoBlB,SAASyD,EAAOkB,GACnB,OAAOtF,MAAM,GAAD,OA7BC,kBA6BD,OAAesF,EAAQ1G,KAAO,CACtCsB,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAUgF,IACtB,CAAErB,KAAM,SACN1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGlB,SAAS4E,EAAcnC,GAC1B,OAAOpD,MAAM,GAAD,OAtCC,kBAsCD,OAAeoD,GAAM,CAC7BlD,OAAQ,SACRC,QAAS,CAAE,cAAiB,UAAYW,EAAa/B,aACtD,CAAEkF,KAAM,SACN1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGlB,SAAS6E,EAAYpC,EAAIkC,GAC5B,OAAOtF,MAAM,GAAD,OA9CC,iBA8CD,iBAAqBsF,GAAW,CACxCpF,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAU8C,IACtB,CAAEa,KAAM,SACN1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGlB,SAAS8E,EAAarC,EAAIkC,GAC7B,OAAOtF,MAAM,GAAD,OAvDC,iBAuDD,kBAAsBsF,GAAW,CACzCpF,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAU8C,IACtB,CAAEa,KAAM,SACN1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGlB,SAAS+E,EAAatC,EAAIkC,GAC7B,OAAOtF,MAAM,GAAD,OAhEC,iBAgED,yBAA6BsF,GAAW,CAChDpF,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAU8C,IACtB,CAAEa,KAAM,SACN1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGlB,SAASgF,EAAYvC,EAAIkC,GAC5B,OAAOtF,MAAM,GAAD,OAzEC,iBAyED,wBAA4BsF,GAAW,CAC/CpF,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAU8C,IACtB,CAAEa,KAAM,SACN1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,U,ICeViF,E,4MAvFbvE,MAAQ,CACNiD,aAAa,EACbC,SAAU,CACR1F,KAAM,GACNgH,MAAO,GACPC,OAAQ,OACRrB,YAAa,GACbsB,UAAW,QACXC,YAAa,GACbC,WAAY,K,EAGhBtB,QAAUC,IAAMC,Y,EAEhBqB,iB,uCAAmB,WAAMC,GAAN,SAAAlE,EAAA,6DACjBxB,QAAQC,IAAI,cADK,SAEX0F,EAAkBD,GACrB5F,MAAK,kBAAM,EAAKoB,MAAMO,QAAQI,KAAnB,oBAAqC,EAAKX,MAAM3D,KAAKY,SAHlD,OAIjB6B,QAAQC,IAAI,gBAJK,2C,wDAOnBsB,aAAe,SAAAN,GACbA,EAAEU,iBACF,EAAK8D,iBAAiB,EAAK7E,MAAMkD,W,EAGnC9C,aAAe,SAAAC,GACb,IAAM6C,EAAQ,2BAAQ,EAAKlD,MAAMkD,UAAnB,kBAA8B7C,EAAEI,OAAOjD,KAAO6C,EAAEI,OAAOC,QACrE,EAAKF,SAAS,CACZ0C,WACAD,aAAc,EAAKK,QAAQM,QAAQC,mB,uDAKrC,OACE,oCACE,2CACA,kBAACzC,EAAA,EAAD,CAAMtE,UAAU,WAAWgH,IAAK3C,KAAKmC,QAAShC,SAAUH,KAAKR,cAC3D,6BACE,kBAACS,EAAA,EAAKG,MAAN,qBAAsC,6BACtC,kBAACH,EAAA,EAAKO,QAAN,CAAcnE,KAAK,OAAOoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAAS1F,KAAMqE,SAAUV,KAAKf,aAAc4D,UAAQ,KACxG,6BACN,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,4BAA6C,6BAC7C,kBAACH,EAAA,EAAKO,QAAN,CAAcqD,GAAG,WAAWxH,KAAK,cAAcyH,KAAK,IAAIC,KAAK,KAAKxE,MAAOS,KAAKnB,MAAMkD,SAASE,YAAavB,SAAUV,KAAKf,cAAzH,2BAGI,6BACN,6BACE,kBAACgB,EAAA,EAAKG,MAAN,kBAAuB,6BAAvB,gDAAsF,6BACtF,kBAACH,EAAA,EAAKO,QAAN,CAAcnE,KAAK,QAAQoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASsB,MAAO3C,SAAUV,KAAKf,aAAc4D,UAAQ,KAC1G,6BACN,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,qBAAsC,6BACtC,kBAACH,EAAA,EAAKO,QAAN,CAAcnE,KAAK,cAAcoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASyB,YAAa9C,SAAUV,KAAKf,aAAc4D,UAAQ,KACtH,6BACN,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,wBAAyC,6BACzC,kBAACH,EAAA,EAAKO,QAAN,CAAcnE,KAAK,aAAaoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAAS0B,WAAY/C,SAAUV,KAAKf,aAAc4D,UAAQ,KACpH,6BACN,6BACE,kBAAC5C,EAAA,EAAKO,QAAN,CAAcqD,GAAG,SAASxH,KAAK,SAASqE,SAAUV,KAAKf,aAAcM,MAAOS,KAAKnB,MAAMkD,SAASuB,OAAQT,UAAQ,GAC9G,4BAAQtD,MAAM,QAAd,UACA,4BAAQA,MAAM,SAAd,aAEE,6BACN,6BACE,kBAACU,EAAA,EAAKO,QAAN,CAAcqD,GAAG,SAASxH,KAAK,YAAYqE,SAAUV,KAAKf,aAAcM,MAAOS,KAAKnB,MAAMkD,SAASwB,UAAWV,UAAQ,GACpH,4BAAQtD,MAAM,QAAd,YACA,4BAAQA,MAAM,SAAd,iBAEE,6BACN,kBAACoB,EAAA,EAAD,CACEhF,UAAU,cACViF,GAAG,SACHH,KAAK,SACLI,SAAUb,KAAKnB,MAAMiD,aAJvB,eAOmB,6BAAM,6BAAM,6BAAM,mC,GAjFtBd,aCHlB,SAASO,EAAOyC,GACrB,OAAOxG,MAHQ,iBAGQ,CACrBE,OAAQ,OACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAUkG,IACpB,CAAEvC,KAAM,SACR1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGd,SAAS8F,EAASA,GACvB,OAAOzG,MAAM,GAAD,OAZG,iBAYH,aAAyB,CACnCE,OAAQ,OACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAUmG,IACpB,CAAExC,KAAM,SACR1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGd,SAASuD,IACd,OAAOlE,MArBQ,iBAqBQ,CACrBG,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,aACxF,CAAEkF,KAAM,SACR1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAUd,SAAS+F,EAASF,GACvB,OAAOxG,MAAM,GAAD,OAnCG,iBAmCH,oBAAwBwG,EAAO5H,KAAO,CAChDsB,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAUkG,IACpB,CAAEvC,KAAM,SACR1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGd,SAASgG,EAAUH,GACxB,OAAOxG,MAAM,GAAD,OA5CG,iBA4CH,eAAmBwG,EAAO5H,KAAO,CAC3CsB,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAUkG,IACpB,CAAEvC,KAAM,SACR1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,UAGd,SAASwD,EAAUqC,GACxB,OAAOxG,MAAM,GAAD,OArDG,kBAqDH,OAAewG,EAAO5H,KAAO,CACvCsB,OAAQ,SACRC,QAAS,CAAE,cAAiB,UAAYW,EAAa/B,aACpD,CAAEkF,KAAM,SACR1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,U,IC0CNiG,E,4MA9FbvF,MAAQ,CACNiD,aAAa,EACbC,SAAU,CACR1F,KAAM,GACNoE,KAAM,GACN4D,UAAW,GACXC,KAAM,GACNC,MAAO,GACPC,MAAO,K,EAIXrC,QAAUC,IAAMC,Y,EAEhBoC,gB,uCAAkB,WAAMC,GAAN,SAAAjF,EAAA,sEACVkF,EAAiBD,GACpB3G,MAAK,kBAAM,EAAKoB,MAAMO,QAAQI,KAAnB,yBAA0C,EAAKjB,MAAMkD,SAAStB,UAF5D,2C,wDAKlBjB,aAAe,SAAAN,GACbA,EAAEU,iBACF,EAAK6E,gBAAgB,EAAK5F,MAAMkD,W,EAGlC9C,aAAe,SAAAC,GACb,IAAM6C,EAAQ,2BAAQ,EAAKlD,MAAMkD,UAAnB,kBAA8B7C,EAAEI,OAAOjD,KAAO6C,EAAEI,OAAOC,QACrE,EAAKF,SAAS,CACZ0C,WACAD,aAAc,EAAKK,QAAQM,QAAQC,mB,uDAKrC,OACE,oCACE,0CACA,yBAAK/G,UAAU,YACb,kBAACsE,EAAA,EAAD,CAAM0C,IAAK3C,KAAKmC,QAAShC,SAAUH,KAAKR,cACtC,6BACE,kBAACS,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,QACA,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,OAAOoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAAS1F,KAAMqE,SAAUV,KAAKf,aAAc4D,UAAQ,KAE9G,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,QACA,kBAAC3C,EAAA,EAAKO,QAAN,CAAcqD,GAAG,SAASxH,KAAK,OAAOqE,SAAUV,KAAKf,aAAcM,MAAOS,KAAKnB,MAAMkD,SAAStB,KAAMoC,UAAQ,GAC1G,4BAAQtD,MAAM,KACd,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,mBACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,WAG2B,UAA7BS,KAAKnB,MAAMkD,SAAStB,KACpB,oCACE,6BACE,kBAACR,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,iBACA,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,YAAYoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASsC,UAAW3D,SAAUV,KAAKf,gBAElG,6BACE,kBAACgB,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKO,QAAN,CAAcnE,KAAK,QAAQoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASwC,MAAO7D,SAAUV,KAAKf,iBAI1F,yCAEJ,6BACE,kBAACgB,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,QACA,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,OAAOoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASuC,KAAM5D,SAAUV,KAAKf,gBAExF,6BACE,kBAACgB,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,SACA,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,QAAQoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASyC,MAAO9D,SAAUV,KAAKf,gBAE1F,yBAAKtD,UAAU,cACb,kBAACgF,EAAA,EAAD,CACEhF,UAAU,cACViF,GAAG,SACHH,KAAK,SACLI,SAAUb,KAAKnB,MAAMiD,aAJvB,sB,GA/EUd,aCmGT4D,G,kNAjGb/F,MAAQ,CACNgG,SAAU,I,EAQZC,WAAa,SAAAd,GAEX,OADa,EAAKnF,MAAMgG,SAASE,QAAO,SAAAC,GAAI,OAAIA,EAAKvE,OAASuD,M,kMALvCW,I,OAAjBE,E,OACN7E,KAAKX,SAAS,CAAEwF,a,qIAShB,OACE,oCACE,4CACA,yBAAKlJ,UAAU,yBACb,kBAAC,IAAD,CACEoF,GAAI,CACFkE,SAAU,yBAGZ,yBAAKnJ,MAAO,CAAEoJ,MAAO,QAASnJ,OAAQ,SAAWC,IAAI,oBAAoBC,IAAI,eAC7E,iDAEF,kBAAC,IAAD,CACE8E,GAAI,CACFkE,SAAU,4BAGZ,yBAAKnJ,MAAO,CAAEoJ,MAAO,QAASnJ,OAAQ,SAAWC,IAAI,uBAAuBC,IAAI,mBAChF,mDAEF,kBAAC,IAAD,CACE8E,GAAI,CACFkE,SAAU,yBAGZ,yBAAKnJ,MAAO,CAAEoJ,MAAO,QAASnJ,OAAQ,SAAWC,IAAI,oBAAoBC,IAAI,gBAC7E,gDAEF,kBAAC,IAAD,CACE8E,GAAI,CACFkE,SAAU,yBAGZ,yBAAKnJ,MAAO,CAAEoJ,MAAO,QAASnJ,OAAQ,SAAWC,IAAI,oBAAoBC,IAAI,uBAC7E,mDAEF,kBAAC,IAAD,CACE8E,GAAI,CACFkE,SAAU,4BAGZ,yBAAKnJ,MAAO,CAAEoJ,MAAO,QAASnJ,OAAQ,SAAWC,IAAI,uBAAuBC,IAAI,2BAChF,2DAEF,kBAAC,IAAD,CACE8E,GAAI,CACFkE,SAAU,yBAGZ,yBAAKnJ,MAAO,CAAEoJ,MAAO,QAASnJ,OAAQ,SAAWC,IAAI,oBAAoBC,IAAI,eAC7E,gDAEF,kBAAC,IAAD,CACE8E,GAAI,CACFkE,SAAU,wBAGZ,yBAAKnJ,MAAO,CAAEoJ,MAAO,QAASnJ,OAAQ,SAAWC,IAAI,mBAAmBC,IAAI,cAC5E,gDAGJ,yBAAKN,UAAU,iBACb,kBAACgF,EAAA,EAAD,CACEhF,UAAU,cACViF,GAAG,SACH/E,KAAM,cAHR,cAOA,kBAAC8E,EAAA,EAAD,CACEhF,UAAU,eACViF,GAAG,SACH/E,KAAK,iBAHP,wB,GArFgBmF,cCwFXmE,G,kNAvFbtG,MAAQ,CACN2C,MAAO,GACPM,aAAa,EACbC,SAAU,EAAK5C,MAAMiG,SAASvG,MAAM2C,O,EAGtCW,QAAUC,IAAMC,Y,EAEhBgD,kB,uCAAoB,WAAMC,GAAN,SAAA7F,EAAA,sEACZ+C,EAAgB8C,GACnBvH,MAAK,kBAAM,EAAKoB,MAAMO,QAAQI,KAAnB,oBAAqCwF,EAAiBlJ,SAFlD,2C,wDAKpBoD,aAAe,SAAAN,GACbA,EAAEU,iBACF,EAAKyF,kBAAkB,EAAKxG,MAAMkD,W,EAGpC9C,aAAe,SAAAC,GACb,IAAM6C,EAAQ,2BAAQ,EAAKlD,MAAMkD,UAAnB,kBAA8B7C,EAAEI,OAAOjD,KAAO6C,EAAEI,OAAOC,QACrE,EAAKF,SAAS,CACZ0C,WACAD,aAAc,EAAKK,QAAQM,QAAQC,mB,uDAKrC,IAAMlB,EAAQxB,KAAKnB,MAAM2C,MACzB,OACE,oCACE,4CACA,yBAAK7F,UAAU,cACb,kBAACgF,EAAA,EAAD,CAAQ9E,KAAI,mBAAc2F,EAAMhG,MAAQG,UAAU,eAAeiF,GAAG,UAApE,oBAKF,yBAAKjF,UAAU,YACb,kBAACsE,EAAA,EAAD,CAAM0C,IAAK3C,KAAKmC,QAAShC,SAAUH,KAAKR,cACtC,6BACE,kBAACS,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,SAA9B,eACA,kBAAC3C,EAAA,EAAKO,QAAN,CACE8D,KAAK,KACLjI,KAAK,QACLoE,KAAK,OACLlB,MAAOS,KAAKnB,MAAMkD,SAASC,MAC3BtB,SAAUV,KAAKf,aACf4D,UAAQ,KAGZ,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,SAA9B,qBACA,kBAAC3C,EAAA,EAAKO,QAAN,CACEnE,KAAK,cACLoE,KAAK,OACLlB,MAAOS,KAAKnB,MAAMkD,SAASE,YAC3BvB,SAAUV,KAAKf,aACf4D,UAAQ,KAGZ,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,SAA9B,aACA,kBAAC3C,EAAA,EAAKO,QAAN,CACEnE,KAAK,MACLoE,KAAK,OACLlB,MAAOS,KAAKnB,MAAMkD,SAASG,IAC3BxB,SAAUV,KAAKf,aACf4D,UAAQ,KAGZ,yBAAKlH,UAAU,cACb,kBAACgF,EAAA,EAAD,CACEhF,UAAU,eACViF,GAAG,SACHH,KAAK,SACLI,SAAUb,KAAKnB,MAAMiD,aAJvB,wB,GAxEUd,cCoETuE,E,4MArEb1G,MAAQ,CACNiD,aAAa,EACbC,SAAU,EAAK5C,MAAMiG,SAASvG,O,EAGhCsD,QAAUC,IAAMC,Y,EAEhB7C,aAAe,SAAAN,GACbA,EAAEU,iBACF,EAAKT,MAAMqG,iBAAiB,EAAK3G,MAAMkD,W,EAGzC9C,aAAe,SAAAC,GACb,IAAM6C,EAAQ,2BAAQ,EAAKlD,MAAMkD,UAAnB,kBAA8B7C,EAAEI,OAAOjD,KAAO6C,EAAEI,OAAOC,QACrE,EAAKF,SAAS,CACZ0C,WACAD,aAAc,EAAKK,QAAQM,QAAQC,mB,uDAKrC,OACE,oCACE,4CACA,yBAAK/G,UAAU,YACb,kBAACsE,EAAA,EAAD,CAAM0C,IAAK3C,KAAKmC,QAASjC,aAAa,MAAMC,SAAUH,KAAKR,cACzD,yBAAK7D,UAAU,cACb,kBAACsE,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKO,QAAN,CACE7E,UAAU,eACVU,KAAK,OACLkD,MAAOS,KAAKnB,MAAMkD,SAAS1F,KAC3BqE,SAAUV,KAAKf,aACf4D,UAAQ,KAGZ,yBAAKlH,UAAU,cACb,kBAACsE,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKO,QAAN,CACEI,GAAG,UACHvE,KAAK,OACLkD,MAAOS,KAAKnB,MAAMkD,SAAS0D,KAC3B/E,SAAUV,KAAKf,gBAGnB,yBAAKtD,UAAU,0BACb,kBAACgF,EAAA,EAAD,CACEhF,UAAU,eACViF,GAAG,SACHH,KAAK,SACLI,SAAUb,KAAKnB,MAAMiD,aAJvB,eAQA,6BACA,kBAACnB,EAAA,EAAD,CACEhF,UAAU,YACViF,GAAG,SACH/E,KAAI,mBAAcmE,KAAKb,MAAMiG,SAASvG,MAAMzC,MAH9C,kB,GAxDY4E,a,gBC6DX0E,E,4MA5Db7G,MAAQ,CACN8G,cAAc,G,EAGhBC,UAAY,SAACf,EAAUgB,GACrB,IAAIC,GAAS,EAMb,OALAjB,EAASkB,SAAQ,SAAAC,GACXA,EAAE5J,MAAQyJ,IACZC,GAAS,MAGNA,G,EAGTG,2BAA6B,WAC3B,EAAK5G,UAAS,SAACR,GACb,MAAO,CAAE8G,cAAe9G,EAAM8G,kB,uDAIxB,IAAD,OACP,OACE,6BACE,wBACEhK,UAAU,eACVW,QAAS,kBAAM,EAAK2J,+BACpBjG,KAAKb,MAAMsB,MACb,yBAAK9E,UAAU,YAAYiF,GAAG,gBAC5B,yBAAKjF,UAAWqE,KAAKnB,MAAM8G,aAAe,GAAK,UAC7C,kBAACO,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC/B,KAAK,KAAKgC,QAAQ,QAAQ3K,UAAU,SAChE,+BACE,4BACE,oCACA,0CACA,6CACA,qDAGJ,+BACGqE,KAAKb,MAAM0F,SAAS0B,KAAI,SAACvC,EAAQwC,GAAT,OACvB,wBAAIC,IAAKD,GACP,4BAAKxC,EAAO3H,MACZ,4BAAK2H,EAAOK,WACZ,4BAAKL,EAAO0C,IAAM,GAAK,KACvB,4BAAK,EAAKd,UAAU,EAAKzG,MAAM2D,QAAQ+B,SAAUb,EAAO5H,KACtD,4BAAQE,QAAS,kBAAM,EAAK6C,MAAMwH,mBAAmB3C,EAAO5H,IAAK,EAAK+C,MAAMyH,YAAYjL,UAAU,YAAYiF,GAAG,UAAjH,WAEA,4BAAQtE,QAAS,kBAAM,EAAK6C,MAAM0H,mBAAmB7C,EAAO5H,IAAK,EAAK+C,MAAMyH,YAAYjL,UAAU,cAAciF,GAAG,UAAnH,wB,GAhDII,aC4BX8F,G,4MA5BbjI,MAAQ,G,EAIRkI,SAAW,SAACC,EAAQC,GAClB,IAAInB,GAAS,EAMb,OALAkB,EAAOjB,SAAQ,SAAAmB,GACTA,EAAE9K,MAAQ6K,IACZnB,GAAS,MAGNA,G,uDAGC,IAAD,OACP,OACE,oCACE,6BAAK,yBAAKZ,MAAM,MAAMlJ,IAAKgE,KAAKb,MAAMqC,MAAMU,IAAKjG,IAAK+D,KAAKb,MAAMqC,MAAMQ,SACvE,yBAAKrG,UAAU,cAAcqE,KAAK+G,SAAS/G,KAAKb,MAAM2D,QAAQkE,OAAQhH,KAAKb,MAAMqC,MAAMpF,KACrF,kBAACuE,EAAA,EAAD,CAAQrE,QAAS,kBAAM,EAAK6C,MAAMgI,kBAAkB,EAAKhI,MAAMqC,MAAMpF,IAAK,EAAK+C,MAAMyH,YAAYjL,UAAU,YAAYiF,GAAG,UAA1H,iBAEA,kBAACD,EAAA,EAAD,CAAQrE,QAAS,kBAAM,EAAK6C,MAAMiI,kBAAkB,EAAKjI,MAAMqC,MAAMpF,IAAK,EAAK+C,MAAMyH,YAAYjL,UAAU,cAAciF,GAAG,UAA5H,uB,GAtBoBI,a,2BCUxBqG,I,MAAQ,CACZ,CAAC,QAAS,UAAW,CAAC,QAAS,WAAY,CAAC,QAAS,UAAW,CAAC,WAAY,qBAAsB,CAAC,QAAS,kBAAmB,CAAC,OAAQ,SAAU,CAAC,WAAY,eA2LnJC,G,4MAvLbzI,MAAQ,CACNiD,aAAa,EACbC,SAAU,EAAK5C,MAAMiG,SAASvG,MAAMiE,QACpCkE,OAAQ,GACRlE,QAAS,EAAK3D,MAAMiG,SAASvG,MAAMiE,QACnC+B,SAAU,I,EAGZ1C,QAAUC,IAAMC,Y,EAEhBkF,oB,uCAAsB,WAAMC,GAAN,SAAA/H,EAAA,sEACdmE,EAAkB4D,GACrBzJ,MAAK,kBAAM,EAAKoB,MAAMO,QAAQI,KAAnB,yBAA0C0H,EAAcpL,SAFlD,2C,wDAYtBoD,aAAe,SAAAN,GACbA,EAAEU,iBACF,EAAK2H,oBAAoB,EAAK1I,MAAMkD,W,EAGtC9C,aAAe,SAAAC,GACb,IAAM6C,EAAQ,2BAAQ,EAAKlD,MAAMkD,UAAnB,kBAA8B7C,EAAEI,OAAOjD,KAAO6C,EAAEI,OAAOC,QACrE,EAAKF,SAAS,CACZ0C,WACAD,aAAc,EAAKK,QAAQM,QAAQC,mB,EAIvC0E,kB,uCAAoB,WAAOxG,EAAIkC,GAAX,mBAAArD,EAAA,6DACZgI,EAAU,CAAEC,KAAM9G,GADN,SAEZgD,EAAuB6D,EAAS3E,GAFpB,OAIZtB,EAAQ,EAAK3C,MAAMmI,OAAOW,MAAK,SAAAT,GAAC,OAAIA,EAAE9K,MAAQwE,MAC9CgH,EAAiB,EAAK/I,MAAMiE,SACnBkE,OAAOlH,KAAK0B,GAC3B,EAAKnC,SAAS,CAAEyD,QAAS8E,IAPP,2C,0DAUpBT,kB,uCAAoB,WAAOvG,EAAIkC,GAAX,mBAAArD,EAAA,6DACZoI,EAAW,CAAEH,KAAM9G,GADP,SAEZgD,EAAuBiE,EAAU/E,GAFrB,OAIZ8E,EAAiB,EAAK/I,MAAMiE,QAC5B0D,EAAMoB,EAAeZ,OAAOc,WAAU,SAAAZ,GAAC,OAAIA,EAAE9K,MAAQwE,KAC3DgH,EAAeZ,OAAOe,OAAOvB,EAAK,GAClC,EAAKnH,SAAS,CAAEyD,QAAS8E,IAPP,2C,0DAUpBf,mB,uCAAqB,WAAOjG,EAAIkC,GAAX,mBAAArD,EAAA,6DACboI,EAAW,CAAEH,KAAM9G,GADN,SAEbgD,EAAwBiE,EAAU/E,GAFrB,OAMbkB,EAAS,EAAKnF,MAAMgG,SAAS8C,MAAK,SAAA3B,GAAC,OAAIA,EAAE5J,MAAQwE,MACjDgH,EAAiB,EAAK/I,MAAMiE,SACnB+B,SAAS/E,KAAKkE,GAC7B,EAAK3E,SAAS,CAAEyD,QAAS8E,IATN,2C,0DAYrBjB,mB,uCAAqB,WAAO/F,EAAIkC,GAAX,mBAAArD,EAAA,6DACboI,EAAW,CAAEH,KAAM9G,GADN,SAEbgD,EAAwBiE,EAAU/E,GAFrB,OAIb8E,EAAiB,EAAK/I,MAAMiE,QAC5B0D,EAAMoB,EAAe/C,SAASiD,WAAU,SAAA9B,GAAC,OAAIA,EAAE5J,MAAQwE,KAC7DgH,EAAe/C,SAASkD,OAAOvB,EAAK,GACpC,EAAKnH,SAAS,CAAEyD,QAAS8E,IAPN,2C,0DAUrBhC,UAAY,SAACf,EAAUgB,GACrB,IAAIC,GAAS,EAMb,OALAjB,EAASkB,SAAQ,SAAAC,GACXA,EAAE5J,MAAQyJ,IACZC,GAAS,MAGNA,G,EAGThB,WAAa,SAAAd,GAEX,OADa,EAAKnF,MAAMgG,SAASE,QAAO,SAAAC,GAAI,OAAIA,EAAKvE,OAASuD,M,oMAxEzCxB,EAAoBxC,KAAKb,MAAM3D,KAAKY,K,cAAnD4K,E,gBP4BDxJ,MAAM,GAAD,OA7DG,iBA6DH,OAAmB,CAC7BG,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,aACxF,CAAEkF,KAAM,SACR1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,U,OO9BX0G,E,OAEN7E,KAAKX,SAAS,CAAE2H,SAAQnC,a,qIAyEhB,IAAD,OACD+B,EAAY5G,KAAKnB,MAAMkD,SAAS3F,IACtC,OACE,oCACE,kBAAC4L,GAAA,EAAD,CAAWrM,UAAU,sBACnB,kBAACqM,GAAA,EAAD,CAAWrM,UAAU,qBACnB,4CACA,kBAACsE,EAAA,EAAD,CAAM0C,IAAK3C,KAAKmC,QAAShC,SAAUH,KAAKR,cACtC,6BACE,kBAACS,EAAA,EAAKG,MAAN,qBAAsC,6BACtC,kBAACH,EAAA,EAAKO,QAAN,CAAcnE,KAAK,OAAOoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAAS1F,KAAMqE,SAAUV,KAAKf,aAAc4D,UAAQ,KACxG,6BACN,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,4BAA6C,6BAC7C,kBAACH,EAAA,EAAKO,QAAN,CAAcqD,GAAG,WAAWxH,KAAK,cAAcyH,KAAK,IAAIC,KAAK,KAAKxE,MAAOS,KAAKnB,MAAMkD,SAASE,YAAavB,SAAUV,KAAKf,cAAzH,2BAGI,6BACN,6BACE,kBAACgB,EAAA,EAAKG,MAAN,kBAAuB,6BAAvB,gDAAsF,6BACtF,kBAACH,EAAA,EAAKO,QAAN,CAAcnE,KAAK,QAAQoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASsB,MAAO3C,SAAUV,KAAKf,aAAc4D,UAAQ,KAC1G,6BACN,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,qBAAsC,6BACtC,kBAACH,EAAA,EAAKO,QAAN,CAAc1E,MAAO,CAAEoJ,MAAO,MAAO+C,OAAQ,UAAY5L,KAAK,cAAcoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASyB,YAAa9C,SAAUV,KAAKf,aAAc4D,UAAQ,KACjK,6BACN,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,wBAAyC,6BACzC,kBAACH,EAAA,EAAKO,QAAN,CAAc1E,MAAO,CAAEoJ,MAAO,MAAO+C,OAAQ,UAAY5L,KAAK,aAAaoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAAS0B,WAAY/C,SAAUV,KAAKf,aAAc4D,UAAQ,KAC/J,6BACN,6BACE,kBAAC5C,EAAA,EAAKO,QAAN,CAAc1E,MAAO,CAAEoJ,MAAO,MAAO+C,OAAQ,UAAYpE,GAAG,SAASS,KAAK,KAAKjI,KAAK,SAASqE,SAAUV,KAAKf,aAAcM,MAAOS,KAAKnB,MAAMkD,SAASuB,OAAQT,UAAQ,GACnK,4BAAQtD,MAAM,QAAd,UACA,4BAAQA,MAAM,SAAd,aAEE,6BACN,6BACE,kBAACU,EAAA,EAAKO,QAAN,CAAc1E,MAAO,CAAEoJ,MAAO,MAAO+C,OAAQ,UAAYpE,GAAG,SAASS,KAAK,KAAKjI,KAAK,YAAYqE,SAAUV,KAAKf,aAAcM,MAAOS,KAAKnB,MAAMkD,SAASwB,UAAWV,UAAQ,GACzK,4BAAQtD,MAAM,QAAd,YACA,4BAAQA,MAAM,SAAd,iBAEE,6BACN,kBAACoB,EAAA,EAAD,CACE7E,MAAO,CAAEmM,OAAQ,UACjBtM,UAAU,eACViF,GAAG,SACHH,KAAK,SACLI,SAAUb,KAAKnB,MAAMiD,aALvB,oBAYJ,kBAACkG,GAAA,EAAD,CAAWrM,UAAU,6BACnB,+CACC0L,GAAMd,KAAI,SAAC9F,EAAM+F,GAAP,OACT,kBAAC0B,GAAA,EAAD,CAAKzB,IAAKD,EAAK5F,GAAG,QAChB,kBAAC,EAAD,CACEA,GAAG,eACHH,KAAMA,EAAK,GACXoE,SAAU,EAAKC,WAAWrE,EAAK,IAC/BmG,UAAWA,EACX9D,QAAS,EAAKjE,MAAMiE,QACpB+D,mBAAoB,EAAKA,mBACzBF,mBAAoB,EAAKA,2BAOnC,6CACA,kBAACqB,GAAA,EAAD,CAAWrM,UAAU,qBAClBqE,KAAKnB,MAAMmI,OAAOT,KAAI,SAAC/E,EAAOgF,GAAR,OACrB,kBAAC2B,GAAA,EAAD,CAAK1B,IAAKD,GACR,kBAAC,GAAD,CACEhF,MAAOA,EACPoF,UAAWA,EACX9D,QAAS,EAAKjE,MAAMiE,QACpBsE,kBAAmB,EAAKA,kBACxBD,kBAAmB,EAAKA,8B,GA9KdnG,aCLXoH,I,MATG,SAAC,GAAe,IAAb5G,EAAY,EAAZA,MACnB,OACE,yBAAK7F,UAAU,cACb,4BAAK6F,EAAMQ,OACX,yBAAKhG,IAAKwF,EAAMU,IAAKgD,MAAM,MAAMjJ,IAAKuF,EAAMS,iBCwDnCoG,G,4MArDbxJ,MAAQ,CACNmI,OAAQ,I,kMAIaxE,EAAoBxC,KAAKb,MAAMmJ,MAAMC,OAAO3H,I,OAA3DoG,E,OACNhH,KAAKX,SAAS,CAAE2H,W,qIAIhB,IAAMxL,EAAOwE,KAAKb,MAAM3D,KACxB,OACE,oCACE,uCACCA,GAASA,EAAKY,MAAQ4D,KAAKb,MAAMmJ,MAAMC,OAAO3H,IAC7C,oCACE,yBAAKA,GAAG,iBACN,kBAACD,EAAA,EAAD,CACEhF,UAAU,cACViF,GAAG,SACH/E,KAAK,aAHP,eASN,kBAACmM,GAAA,EAAD,CAAWrM,UAAU,qBAClBqE,KAAKnB,MAAMmI,OAAOT,KAAI,SAAC/E,EAAOgF,GAAR,OACrB,kBAAC2B,GAAA,EAAD,CAAK1B,IAAKjF,EAAMgF,KACd,kBAAC,IAAD,CACEzF,GAAI,CACFkE,SAAS,cAAD,OAAgBzD,EAAMpF,OAGhC,kBAAC,GAAD,CACET,UAAU,OACV6F,MAAOA,e,GArCHR,aC2BPwH,G,4MAjCb3J,MAAQ,G,uDAEN,IAAMrD,EAAOwE,KAAKb,MAAM3D,KACxB,OACE,oCACE,oDAEA,yGAA8E,6BAA9E,oFAEA,mFACuD,uBAAGK,KAAK,WAAR,WADvD,KAKA,oFACwD,uBAAGA,KAAK,gBAAR,iBADxD,sDACmJ,6BADnJ,2BAE0B,uBAAGA,KAAI,iBAAP,aAF1B,KAICL,GAASA,EAAKY,MAAQ4D,KAAKb,MAAM3D,KAAKY,KACrC,oCACE,kFACsD,uBAAGP,KAAI,mBAAcmE,KAAKb,MAAM3D,KAAKY,MAArC,iBADtD,MACsH,6BADtH,sDAEmD,uBAAGP,KAAI,oBAAemE,KAAKb,MAAM3D,KAAKY,MAAtC,WAFnD,W,GArBc4E,aCsCnB,SAASyH,GAAY7H,GAC1B,OAAOpD,MAAM,GAAD,OAxCG,eAwCH,OAAeoD,GAAM,CAC/BjD,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,cAExFwB,MAAK,SAACC,GAAD,OAASA,EAAIG,UAGR,QACbuK,YA7CK,WACL,OAAOlL,MAHQ,cAKb,CACEG,QAAS,CAAEgL,cAAe,UAAYrK,EAAa/B,aAErD,CAAEkF,KAAM,SACR1D,MAAK,SAACC,GAAD,OAASA,EAAIG,WAuCpByD,OA3BK,SAAgBpG,GACrB,OAAOgC,MAAM,GAAD,OAtBG,eAsBH,OAAehC,EAAKY,KAAO,CACrCsB,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,YACzFsB,KAAMlB,KAAKmB,UAAUtC,IACpB,CAAEiG,KAAM,SAER1D,MAAK,SAACC,GAEL,GAAIA,EAAIW,GAAI,OAAOX,EAAIG,OACvB,MAAM,IAAIC,MAAM,uBAEjBL,MAAK,YAAgB,IAAbvB,EAAY,EAAZA,MACP8B,EAAahB,cACbgB,EAAanB,SAASX,OAc1BiM,gBCMaG,I,kNAlDb/J,MAAQ,CACNgK,QAAS,CAAEC,UAAW,K,kMAIAC,GAAoB/I,KAAKb,MAAMmJ,MAAMC,OAAO3H,I,OAA5DiI,E,OACN7I,KAAKX,SAAS,CAAEwJ,Y,qIAIhB,IAAMrN,EAAOwE,KAAKb,MAAM3D,KAClBqN,EAAU7I,KAAKnB,MAAMgK,QAC3B,OACE,oCAEE,yBAAKlN,UAAU,eACb,yBAAKK,IAAK6M,EAAQpD,KAAMxJ,IAAI,YAAYiJ,MAAM,MAAMvJ,UAAU,YAC9D,oCAAUkN,EAAQxM,MAClB,4CAAkBwM,EAAQC,UAAUE,MAAM,EAAG,KAC7C,yBAAKrN,UAAU,sBACb,kBAAC,IAAD,CAAMoF,GAAE,oBAAe8H,EAAQzM,KAAOT,UAAU,eAAeiF,GAAG,UAAlE,YACA,kBAAC,IAAD,CAAMG,GAAE,mBAAc8H,EAAQzM,KAAOT,UAAU,eAAeiF,GAAG,UAAjE,YAGF,yBAAKA,GAAG,oBACLpF,GAASA,EAAKY,MAAQyM,EAAQzM,KAC7B,kBAAC,IAAD,CACEwE,GAAG,SACHjF,UAAU,eACVoF,GAAI,CACFkE,SAAU,eACVpG,MAAOmB,KAAKb,MAAM3D,OALtB,kBAcN,6BAEA,6BAEA,kC,GA7CkBwF,cCoFXiI,I,kNA9EbpK,MAAQ,CACNiE,QAAS,CACPkE,OAAQ,GACRnC,SAAU,K,EASdqE,oB,uCAAsB,WAAMtI,GAAN,SAAAnB,EAAA,0DAChBI,EAAYtB,UADI,gCAEZqF,EAAyBhD,GAC5B7C,MAAK,kBAAM,EAAKoB,MAAMO,QAAQI,KAAnB,oBAAqC,EAAKX,MAAM3D,KAAKY,SAHjD,6BAKlB,EAAK+C,MAAMO,QAAQI,KAAK,UALN,2C,wPfCOc,EeLqBZ,KAAKb,MAAMmJ,MAAMC,OAAO3H,GfMjEpD,MAAM,GAAD,OAxBC,iBAwBD,mBAAuBoD,IAC9B7C,MAAK,SAAAC,GAAG,OAAIA,EAAIG,U,OePf2E,E,OACN9C,KAAKX,SAAS,CAAEyD,Y,iCfIb,IAAwBlC,I,iGeQnB,IAAD,OACDkC,EAAU9C,KAAKnB,MAAMiE,QACrBtH,EAAOwE,KAAKb,MAAM3D,KACxB,OACE,oCACE,4BAAKsH,EAAQzG,MACb,kBAAC2L,GAAA,EAAD,CAAWrM,UAAU,6BACnB,kBAACuM,GAAA,EAAD,CAAKtH,GAAG,eACN,2CAAiBkC,EAAQb,aACzB,qCAAWa,EAAQO,OACnB,4CAAkBP,EAAQU,eAK9B,gDACA,kBAACwE,GAAA,EAAD,CAAWrM,UAAU,8BAClBqE,KAAKnB,MAAMiE,QAAQ+B,SAAS0B,KAAI,SAACvC,EAAQwC,GAAT,OAC/B,kBAAC2B,GAAA,EAAD,CAAK1B,IAAKD,EAAK7K,UAAWqI,EAAO0C,IAAM,QAAU,QAC/C,oCAAU1C,EAAOvD,KAAK,6BAAtB,SACyBuD,EAAO3H,KAAK,6BADrC,UAE0B2H,EAAOQ,YAKvC,8CACA,kBAACwD,GAAA,EAAD,CAAWrM,UAAU,4BAClBqE,KAAKnB,MAAMiE,QAAQkE,OAAOT,KAAI,SAACS,EAAQR,GAAT,OAC7B,kBAAC0B,GAAA,EAAD,CAAKtH,GAAG,QACN,yBAAK6F,IAAKD,EAAKtB,MAAM,MAAMlJ,IAAK,EAAK6C,MAAMiE,QAAQkE,OAAOR,GAAKtE,IAAKjG,IAAI,UAK7ET,GAASA,EAAKY,MAAQ0G,EAAQtH,MAC7B,yBAAKG,UAAU,aAAaiF,GAAG,2BAC7B,kBAAC,IAAD,CACEjF,UAAU,eACViF,GAAG,SACHG,GAAI,CACFkE,SAAU,eACVpG,MAAO,CAAEiE,aALb,gBAUA,kBAACnC,EAAA,EAAD,CAAQF,KAAK,SAASnE,QAAS,kBAAM,EAAK4M,oBAAoBpG,EAAQ1G,MAAMT,UAAU,YAAYiF,GAAG,UAArG,wB,GArEiBI,c,SCqBdmI,GA5BK,SAAC,GAAiB,IAAfrG,EAAc,EAAdA,QACrB,OACE,6BACE,kBAACsG,GAAA,EAAD,CAAMtN,MAAO,CAAEoJ,MAAO,SAAWvJ,UAAU,WACzC,kBAACyN,GAAA,EAAKC,KAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,SAAa,4BAAKxG,EAAQzG,MAA1B,KACA,kBAAC+M,GAAA,EAAKG,IAAN,CACEjD,QAAQ,MACRtK,IAAK8G,EAAQkE,OAAOwC,OAAS1G,EAAQkE,OAAO,GAAG9E,IAAM,kCACrDgD,MAAM,QAIR,kBAACkE,GAAA,EAAKK,KAAN,UC6BKC,I,kNArCb7K,MAAQ,CACN8K,SAAU,I,kMjBQkB/I,EiBJsBZ,KAAKb,MAAMmJ,MAAMC,OAAO3H,GjBKnEpD,MAAM,GAAD,OAjBC,kBAiBD,OAAeoD,GAAM,CAC7BjD,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,aAC1F,CAAEkF,KAAM,SACN1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,U,OiBRfwL,E,OACN3J,KAAKX,SAAS,CAAEsK,a,iCjBGb,IAAyB/I,I,iGiBC5B,OACE,oCACE,2CACA,yBAAKjF,UAAU,aAAaiF,GAAG,mBAC7B,kBAACD,EAAA,EAAD,CAAQ9E,KAAK,cAAcF,UAAU,cAAciF,GAAG,UAAtD,iBAEe,8BAEjB,yBAAKjF,UAAU,gBACZqE,KAAKnB,MAAM8K,SAASpD,KAAI,SAACzD,EAAS0D,GAAV,OACvB,kBAAC,IAAD,CACEC,IAAKD,EACLzF,GAAI,CACFkE,SAAS,mBAAD,OAAqBnC,EAAQ1G,OAGvC,kBAAC,GAAD,CACE0G,QAASA,c,GA5BH9B,cC+DP4I,I,kNA7Db/K,MAAQ,CACN2C,MAAO,I,EAQTqI,kB,uCAAoB,WAAMjJ,GAAN,SAAAnB,EAAA,0DACdI,EAAYtB,UADE,gCAEViE,EAAmB5B,GACtB7C,MAAK,kBAAM,EAAKoB,MAAMO,QAAQI,KAAnB,mBAAoC,EAAKjB,MAAM2C,MAAMhG,UAHnD,6BAKhB,EAAK2D,MAAMO,QAAQI,KAAK,UALR,2C,wPpBCGc,EoBLiBZ,KAAKb,MAAMmJ,MAAMC,OAAO3H,GpBMzDpD,MAAM,GAAD,OAnBG,gBAmBH,OAAeoD,IAC1B7C,MAAK,SAAAC,GAAG,OAAIA,EAAIG,U,OoBPTqD,E,OACNxB,KAAKX,SAAS,CAAEmC,U,iCpBIb,IAAkBZ,I,iGoBQb,IAAD,OACDY,EAAQxB,KAAKnB,MAAM2C,MACnBhG,EAAOwE,KAAKb,MAAM3D,KACxB,OACE,oCACE,yBAAKG,UAAU,oBACb,kBAACgF,EAAA,EAAD,CAAQ9E,KAAI,mBAAc2F,EAAMhG,MAAQG,UAAU,eAAeiF,GAAG,UAApE,oBAMDpF,GAASA,EAAKY,MAAQoF,EAAMhG,MAC3B,yBAAKG,UAAU,kBACb,kBAACyN,GAAA,EAAD,CAAMtN,MAAO,CAAEoJ,MAAO,SAAWvJ,UAAU,WACzC,kBAACyN,GAAA,EAAKG,IAAN,CAAUjD,QAAQ,MAAMtK,IAAKwF,EAAMU,IAAKgD,MAAM,MAAMjJ,IAAKuF,EAAMS,cAC/D,kBAACmH,GAAA,EAAKC,KAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,KAAa9H,EAAMQ,OACnB,kBAACoH,GAAA,EAAKK,KAAN,KAAW,2BAAIjI,EAAMS,cACrB,yBAAKtG,UAAU,eACb,kBAAC,IAAD,CACEA,UAAU,eACViF,GAAG,SACHG,GAAI,CACFkE,SAAU,aACVpG,MAAO,CAAE2C,WALb,cAUA,kBAACb,EAAA,EAAD,CAAQF,KAAK,SAASnE,QAAS,kBAAM,EAAKuN,kBAAkBrI,EAAMpF,MAAMT,UAAU,YAAYiF,GAAG,UAAjG,yB,GAjDMI,cCsET8I,I,kNAvEbjL,MAAQ,CACNqF,SAAU,I,EAQZ6F,gB,uCAAkB,WAAM/F,GAAN,SAAAvE,EAAA,sEACVkF,EAAoBX,GADV,OAEhB,EAAK3E,UAAS,SAAAR,GAAK,MAAK,CACtBqF,SAAUrF,EAAMqF,SAASa,QAAO,SAAAiB,GAAC,OAAIA,EAAE5J,MAAQ4H,EAAO5H,WAHxC,2C,wDAOlB4N,mB,uCAAqB,WAAMhG,GAAN,SAAAvE,EAAA,sEACbkF,EAAoBX,GADP,OAEnB,EAAK3E,UAAS,SAAAR,GAAK,MAAK,CACtBqF,SAAUrF,EAAMqF,SAASa,QAAO,SAAAiB,GAAC,OAAIA,EAAE5J,MAAQ4H,EAAO5H,WAHrC,2C,wPjBMdoB,MAAM,GAAD,OA5BG,iBA4BH,YAAwB,CAClCG,QAAS,CAAE,eAAgB,mBAAoB,cAAiB,UAAYW,EAAa/B,aACxF,CAAEkF,KAAM,SACR1D,MAAK,SAAAC,GAAG,OAAIA,EAAIG,U,OiBpBX+F,E,OACNlE,KAAKX,SAAS,CAAE6E,a,qIAiBR,IAAD,OACP,OACE,oCACE,gDACA,yBAAKvI,UAAU,mBACb,kBAACgF,EAAA,EAAD,CACEhF,UAAU,cACViF,GAAG,SACH/E,KAAM,gBAHR,qBAQF,yBAAKF,UAAU,aACb,kBAACuK,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC/B,KAAK,KAAKgC,QAAQ,QAAQ3K,UAAU,SAChE,+BACE,4BACE,oCACA,oCACA,0CACA,qCACA,oCACA,qCACA,oCACA,yCAGJ,+BACGqE,KAAKnB,MAAMqF,SAASqC,KAAI,SAACvC,EAAQwC,GAAT,OACvB,wBAAIC,IAAKD,GACP,4BAAKxC,EAAO3H,MACZ,4BAAK2H,EAAOvD,MACZ,4BAAKuD,EAAOK,WACZ,4BAAKL,EAAOO,OACZ,4BAAKP,EAAOM,MACZ,4BAAKN,EAAOQ,OACZ,wBAAIyF,MAAM,UAAS,kBAACtJ,EAAA,EAAD,CAAQrE,QAAS,kBAAM,EAAKyN,gBAAgB/F,IAASrI,UAAU,aAAaiF,GAAG,UAA/E,eACnB,wBAAIqJ,MAAM,UAAS,kBAACtJ,EAAA,EAAD,CAAQrE,QAAS,kBAAM,EAAK0N,mBAAmBhG,IAASrI,UAAU,YAAYiF,GAAG,UAAjF,uB,GA7DVI,cCArBqG,I,MAAQ,CACZ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,WAAY,mBAAoB,CAAC,QAAS,gBAAiB,CAAC,OAAQ,QAAS,CAAC,WAAY,cA6F1I6C,G,4MAzFbrL,MAAQ,CACNgG,SAAU,I,EASZsF,qB,uCAAuB,WAAMnG,GAAN,SAAAvE,EAAA,sEACfkF,EAAmBX,GADJ,OAErB,EAAK3E,UAAS,SAAAR,GAAK,MAAK,CACtBgG,SAAUhG,EAAMgG,SAASE,QAAO,SAAAiB,GAAC,OAAIA,EAAE5J,MAAQ4H,EAAO5H,WAHnC,2C,wDAOvB4N,mB,uCAAqB,WAAMhG,GAAN,SAAAvE,EAAA,sEACbkF,EAAoBX,GADP,OAEnB,EAAK3E,UAAS,SAAAR,GAAK,MAAK,CACtBgG,SAAUhG,EAAMgG,SAASE,QAAO,SAAAiB,GAAC,OAAIA,EAAE5J,MAAQ4H,EAAO5H,WAHrC,2C,wDAOrBgO,UAAY,SAAA3J,GACV,IAAIqF,EAMJ,OALAuB,GAAMtB,SAAQ,SAAAf,GACRA,EAAK,KAAOvE,IACdqF,EAASd,EAAK,OAGXc,G,2MA1BmBnB,I,OAApB0F,E,OACAxF,EAAWwF,EAAYtF,QAAO,SAAAC,GAAI,OAAIA,EAAKvE,OAAS,EAAKtB,MAAMmJ,MAAMC,OAAOvE,UAClFhE,KAAKX,SAAS,CAAEwF,a,qIA2BR,IAAD,OACDpE,EAAOT,KAAKoK,UAAUpK,KAAKb,MAAMmJ,MAAMC,OAAOvE,QACpD,OACE,oCACE,4BAAKvD,EAAL,YACA,yBAAK9E,UAAU,aAAaiF,GAAG,qBAC7B,kBAACD,EAAA,EAAD,CACEhF,UAAU,cACViF,GAAG,SACH/E,KAAM,cAHR,eAQF,yBAAKF,UAAU,aACb,kBAACuK,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC/B,KAAK,KAAKgC,QAAQ,SAC9C,+BACE,4BACE,oCACoC,UAAnCtG,KAAKb,MAAMmJ,MAAMC,OAAOvE,QACvB,oCACE,0CACA,sCAGJ,oCACA,qCACA,0CACA,yCAGJ,+BACGhE,KAAKnB,MAAMgG,SAAS0B,KAAI,SAACvC,EAAQwC,GAAT,OACvB,wBAAIC,IAAKD,GACP,4BAAKxC,EAAO3H,MACwB,UAAnC,EAAK8C,MAAMmJ,MAAMC,OAAOvE,QACvB,oCACE,4BAAKA,EAAOK,WACZ,4BAAKL,EAAOO,QAGhB,4BAAKP,EAAOM,MACZ,4BAAKN,EAAOQ,OACZ,wBAAIyF,MAAM,UAAS,4BAAQ3N,QAAS,kBAAM,EAAK6N,qBAAqBnG,IAASrI,UAAU,aAAaiF,GAAG,UAApF,cACnB,wBAAIqJ,MAAM,UAAS,4BAAQ3N,QAAS,kBAAM,EAAK0N,mBAAmBhG,IAASrI,UAAU,YAAYiF,GAAG,UAAjF,uB,GA/ETI,aC0FbsJ,I,kNA7FbzL,MAAQ,CACNiD,aAAa,EACbC,SAAU,CACR1F,KAAM,GACNoE,KAAM,GACN4D,UAAW,GACXC,KAAM,GACNC,MAAO,GACPC,MAAO,K,EAIXrC,QAAUC,IAAMC,Y,EAEhBoC,gB,uCAAkB,WAAM8F,GAAN,SAAA9K,EAAA,sEACVkF,EAAmB4F,GACtBxM,MAAK,kBAAM,EAAKoB,MAAMO,QAAQI,KAAK,oBAFtB,2C,wDAKlBN,aAAe,SAAAN,GACbA,EAAEU,iBACF,EAAK6E,gBAAgB,EAAK5F,MAAMkD,W,EAGlC9C,aAAe,SAAAC,GACb,IAAM6C,EAAQ,2BAAQ,EAAKlD,MAAMkD,UAAnB,kBAA8B7C,EAAEI,OAAOjD,KAAO6C,EAAEI,OAAOC,QACrE,EAAKF,SAAS,CACZ0C,WACAD,aAAc,EAAKK,QAAQM,QAAQC,mB,uDAKrC,OACE,oCACE,gDACA,yBAAK/G,UAAU,YACb,kBAACsE,EAAA,EAAD,CAAM0C,IAAK3C,KAAKmC,QAAShC,SAAUH,KAAKR,cACtC,6BACE,kBAACS,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,QACA,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,OAAOoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAAS1F,KAAMqE,SAAUV,KAAKf,aAAc4D,UAAQ,KAE9G,6BACE,kBAAC5C,EAAA,EAAKG,MAAN,aACA,kBAACH,EAAA,EAAKO,QAAN,CAAcqD,GAAG,SAASxH,KAAK,OAAOqE,SAAUV,KAAKf,aAAcM,MAAOS,KAAKnB,MAAMkD,SAAStB,KAAMoC,UAAQ,GAC1G,4BAAQtD,MAAM,KACd,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,mBACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,WAG0B,UAA7BS,KAAKnB,MAAMkD,SAAStB,MACnB,oCACE,6BACE,kBAACR,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,iBACA,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,YAAYoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASsC,UAAW3D,SAAUV,KAAKf,gBAElG,6BACE,kBAACgB,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKO,QAAN,CAAcnE,KAAK,QAAQoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASwC,MAAO7D,SAAUV,KAAKf,iBAK9F,6BACE,kBAACgB,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,QAAyD,6BACzD,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,OAAOoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASuC,KAAM5D,SAAUV,KAAKf,gBAExF,6BACE,kBAACgB,EAAA,EAAKG,MAAN,CAAYtE,MAAO,CAAE8G,QAAS,QAA9B,SAA0D,6BAC1D,kBAAC3C,EAAA,EAAKO,QAAN,CAAcnE,KAAK,QAAQoE,KAAK,OAAOlB,MAAOS,KAAKnB,MAAMkD,SAASyC,MAAO9D,SAAUV,KAAKf,gBAE1F,yBAAKtD,UAAU,cACb,kBAACgF,EAAA,EAAD,CACEhF,UAAU,cACViF,GAAG,SACHH,KAAK,SACLI,SAAUb,KAAKnB,MAAMiD,aAJvB,4B,GA9EYd,cCkRXwJ,G,4MA7Pb3L,MAAQ,CACNrD,KAAMqE,EAAYtB,W,EAGpBiH,iB,uCAAmB,WAAMiF,GAAN,SAAAhL,EAAA,sEACXiL,GAAY9I,OAAO6I,GADR,OAEjB,EAAKpL,SAAS,CAAE7D,KAAMqE,EAAYtB,YAClC,EAAKY,MAAMO,QAAQI,KAAnB,kBAAmC2K,EAAgBrO,MAHlC,2C,wDAOnBX,aAAe,WACboE,EAAYrB,SACZ,EAAKa,SAAS,CAAE7D,KAAM,Q,EAGxBmE,oBAAsB,WACpB,EAAKN,SAAS,CAAE7D,KAAMqE,EAAYtB,a,uDAG1B,IAAD,OACC/C,EAASwE,KAAKnB,MAAdrD,KACR,OACE,oCACE,kBAAC,EAAD,CAAQA,KAAMA,EAAMC,aAAcuE,KAAKvE,eACvC,8BACE,kBAAC,IAAD,CACEkP,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACN,kBAAC,GAAD,CACErP,KAAM,EAAKqD,MAAMrD,UAIvB,kBAAC,IAAD,CACEmP,OAAK,EACLC,KAAK,UACLC,OAAQ,gBAAGnL,EAAH,EAAGA,QAAH,OACN,kBAAC,EAAD,CACEA,QAASA,EACTC,oBAAqB,EAAKA,yBAIhC,kBAAC,IAAD,CACEgL,OAAK,EACLC,KAAK,SACLC,OAAQ,gBAAGnL,EAAH,EAAGA,QAAH,OACN,kBAAC,EAAD,CACEA,QAASA,EACTC,oBAAqB,EAAKA,yBAIhC,kBAAC,IAAD,CACEgL,OAAK,EACLC,KAAK,YACLC,OAAQ,gBAAGnL,EAAH,EAAGA,QAAH,OACNG,EAAYtB,UACV,kBAAC,EAAD,CACE/C,KAAM,EAAKqD,MAAMrD,KACjBkE,QAASA,IAGb,kBAAC,IAAD,CAAUqB,GAAG,cAGjB,kBAAC,IAAD,CACE4J,OAAK,EACLC,KAAK,cACLC,OAAQ,gBAAGnL,EAAH,EAAGA,QAAH,OACNG,EAAYtB,UACZ,kBAAC,EAAD,CACEmB,QAASA,EACTlE,KAAM,EAAKqD,MAAMrD,OAGnB,kBAAC,IAAD,CAAUuF,GAAG,cAGjB,kBAAC,IAAD,CACE4J,OAAK,EACLC,KAAK,aACLC,OAAQ,gBAAGnL,EAAH,EAAGA,QAAH,OACNG,EAAYtB,UACZ,kBAAC,EAAD,CACEmB,QAASA,IAGX,kBAAC,IAAD,CAAUqB,GAAG,cAGjB,kBAAC,IAAD,CACE4J,OAAK,EACLC,KAAK,eACLC,OAAQ,gBAAGnL,EAAH,EAAGA,QAAH,OACNG,EAAYtB,UACZ,kBAAC,GAAD,CACEmB,QAASA,IAGX,kBAAC,IAAD,CAAUqB,GAAG,cAGjB,kBAAC,IAAD,CACE4J,OAAK,EACLC,KAAK,eACLC,OAAQ,kBAENhL,EAAYtB,UACZ,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAUwC,GAAG,cAGjB,kBAAC,IAAD,CACE4J,OAAK,EACLC,KAAK,aACLC,OAAQ,gBAAGzF,EAAH,EAAGA,SAAU1F,EAAb,EAAaA,QAAb,OAENG,EAAYtB,UACZ,kBAAC,EAAD,CACE6G,SAAUA,EACV1F,QAASA,EACTlE,KAAM,EAAKqD,MAAMrD,OAGnB,kBAAC,IAAD,CAAUuF,GAAG,cAGjB,kBAAC,IAAD,CACE4J,OAAK,EACLC,KAAK,eACLC,OAAQ,gBAAGzF,EAAH,EAAGA,SAAU1F,EAAb,EAAaA,QAAb,OACNG,EAAYtB,UAEZ,kBAAC,EAAD,CACEmB,QAASA,EACT0F,SAAUA,EACVI,iBAAkB,EAAKA,mBAGzB,kBAAC,IAAD,CAAUzE,GAAG,cAGjB,kBAAC,IAAD,CACE4J,OAAK,EACLC,KAAK,eACLC,OAAQ,gBAAGnL,EAAH,EAAGA,QAAS0F,EAAZ,EAAYA,SAAZ,OACNvF,EAAYtB,UACZ,kBAAC,GAAD,CACEmB,QAASA,EACT0F,SAAUA,EACV5J,KAAM,EAAKqD,MAAMrD,OAGnB,kBAAC,IAAD,CAAUuF,GAAG,cAGjB,kBAAC,IAAD,CACE4J,OAAK,EACLC,KAAK,eACLC,OAAQ,gBAAGvC,EAAH,EAAGA,MAAH,OACN,kBAAC,GAAD,CACEA,MAAOA,EACP9M,KAAM,EAAKqD,MAAMrD,UAIvB,kBAAC,IAAD,CACEmP,OAAK,EACLC,KAAK,eAELC,OAAQ,gBAAGvC,EAAH,EAAGA,MAAH,OACN,kBAAC,GAAD,CACE9M,KAAM,EAAKqD,MAAMrD,KACjB8M,MAAOA,OAMb,kBAAC,IAAD,CACEqC,OAAK,EACLC,KAAK,sBACLC,OAAQ,gBAAGvC,EAAH,EAAGA,MAAO5I,EAAV,EAAUA,QAAV,OAEN,kBAAC,GAAD,CACE4I,MAAOA,EACP5I,QAASA,EACTlE,KAAM,EAAKqD,MAAMrD,UAIvB,kBAAC,IAAD,CACEmP,OAAK,EACLC,KAAK,gBACLC,OAAQ,gBAAGvC,EAAH,EAAGA,MAAH,OACN,kBAAC,GAAD,CACEA,MAAOA,OAIb,kBAAC,IAAD,CACEqC,OAAK,EACLC,KAAK,yBACLC,OAAQ,gBAAGvC,EAAH,EAAGA,MAAH,OACNzI,EAAYtB,UACZ,kBAAC,GAAD,CACE+J,MAAOA,IAGT,kBAAC,IAAD,CAAUvH,GAAG,cAGjB,kBAAC,IAAD,CACE4J,OAAK,EACLC,KAAK,iBAELC,OAAQ,gBAAGvC,EAAH,EAAGA,MAAO5I,EAAV,EAAUA,QAAV,OAGN,kBAAC,GAAD,CACE4I,MAAOA,EACP5I,QAASA,EACTlE,KAAM,EAAKqD,MAAMrD,UAKvB,kBAAC,IAAD,CACEmP,OAAK,EACLC,KAAK,gBACLC,OAAQ,kBACNhL,EAAYtB,UACZ,kBAAC,GAAD,MAEA,kBAAC,IAAD,CAAUwC,GAAG,oB,GA/OTC,aCdE8J,QACW,cAA7BC,OAAO3F,SAAS4F,UAEe,UAA7BD,OAAO3F,SAAS4F,UAEhBD,OAAO3F,SAAS4F,SAAS1C,MACvB,2DCXN2C,IAASJ,OACP,kBAAC,IAAD,KACE,kBAAC,IAAMK,WAAP,KACE,kBAAC,IAAD,CAAOL,OAAQ,gBAAGnL,EAAH,EAAGA,QAAH,OAAiB,kBAAC,GAAD,CAAKA,QAASA,SAGlDyL,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxN,MAAK,SAAAyN,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1N,QAAQ0N,MAAMA,EAAM5L,c","file":"static/js/main.1c48db0c.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nconst NavBar = ({ user, handleLogout }) => {\n  return (\n    <>\n      {user ?\n        <Navbar className='nav'>\n          <Navbar.Brand className='logo' href=\"/\">\n            <img style={{ height: \"22px\" }} src=\"/images/chrominia.png\" alt=\"chrominia logo\" />\n          </Navbar.Brand>\n          <Nav.Link href={`/profile/${user._id}`} >Welcome, {user.name}</Nav.Link>\n          <Nav.Link href={`/projects/${user._id}`}>Projects</Nav.Link>\n          <Nav.Link href={`/gallery/${user._id}`}>Gallery</Nav.Link>\n          <Nav.Link href=\"/allsupplies\">Supplies</Nav.Link>\n          <Nav.Link href=\"/viewwishlist\">Wish List</Nav.Link>\n          <Nav.Link href=\" \" onClick={handleLogout}>Log Out</Nav.Link>\n        </Navbar>\n        :\n        <Navbar className=\"nav\">\n          <div><a href=\"/login\" className=\"nav-link\">Log In</a></div>\n          <div><a href=\"/\">\n            <img style={{ height: \"30px\" }} src=\"/images/chrominia.png\" alt=\"chrominia logo\" />\n          </a></div>\n          <div><a href=\"/signup\" className=\"nav-link\">Sign Up</a></div>\n        </Navbar>\n      }\n    </>\n  )\n}\n\nexport default NavBar;","function setToken(token) {\n  localStorage.setItem(\"token\", token);\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  getUserFromToken,\n  removeToken,\n};","import tokenService from \"./tokenService\";\n\nconst BASE_URL = '/api/auth/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    console.log(res, '<-- response object')\n    return res.json();\n  })\n  .then(json => {\n    if(json.token) return json;\n    console.log(json, '<-- the error')\n    throw new Error(`${json.err}`)\n  })\n  .then(({ token }) => {\n    tokenService.setToken(token);\n  })\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n  .then((res) => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error(\"Bad Credentials!\");\n  })\n  .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login,\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport authService from \"../../services/authService\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport '../../pages/Signup/Signup.css'\n\nclass SignupForm extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage(\"\");\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = async (e) => {\n    const { history, updateMessage, handleSignupOrLogin } = this.props;\n    e.preventDefault();\n    try {\n      await authService.signup(this.state);\n      // Let <App> know a user has signed up!\n      handleSignupOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      updateMessage(err.message);\n    }\n  };\n\n  isFormInvalid() {\n    const { name, email, password, passwordConf } = this.state;\n    return !(name && email && password === passwordConf);\n  }\n\n  render() {\n    const { name, email, password, passwordConf } = this.state;\n    return (\n      <div className='form-div'>\n        <h1>Sign Up</h1>\n        <Form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n          <Form.Label htmlFor=\"name\">Name</Form.Label>\n          <Form.Group controlId=\"name\">\n            <Form.Control\n              type=\"text\"\n              autoComplete=\"off\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Group controlId=\"email\" >\n            <Form.Control\n              type=\"text\"\n              autoComplete=\"off\"\n              value={email}\n              name=\"email\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Group controlId=\"password\" >\n            <Form.Control\n              type=\"password\"\n              autoComplete=\"off\"\n              value={password}\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Label htmlFor=\"confirm\">Confirm Password</Form.Label>\n          <Form.Group controlId=\"confirm\" >\n            <Form.Control\n              type=\"password\"\n              autoComplete=\"off\"\n              value={passwordConf}\n              name=\"passwordConf\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <div className='button-div'>\n            <Button type=\"submit\" className='greenButton' id='button' disabled={this.isFormInvalid()}>Sign Up</Button>\n          &nbsp;&nbsp;\n          <Link to=\"/\" className='redButton' id='button'>Cancel</Link>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\n\nclass Signup extends Component {\n  state = {\n    message: ''\n  }\n\n  updateMessage = (msg) => {\n    this.setState({ message: msg });\n  }\n\n  render() {\n    return (\n      <main>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </main>\n    );\n  }\n}\n\nexport default Signup;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\nimport authService from \"../../services/authService\"\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nclass LoginPage extends Component {\n  state = {\n    email: \"\",\n    pw: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = async (e) => {\n    const { history, handleSignupOrLogin } = this.props;\n    e.preventDefault();\n    try {\n      await authService.login(this.state);\n      // Let <App> know a user has signed up!\n      handleSignupOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      // Use a modal or toast in your apps instead of alert\n      alert('Invalid Credentials!');\n    }\n  };\n\n  render() {\n    const { email, pw } = this.state\n    return (\n      <>\n        <h1 id='login-h1'>Log In</h1>\n        <main className=\"Login\">\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group autoComplete='off' controlId=\"email\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                autoComplete=\"off\"\n                value={email}\n                name=\"email\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group autoComplete='off' controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n                value={pw}\n                name=\"pw\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <div className='button-div'>\n              <Button className='greenButton' id='button' type=\"submit\">\n                Log In\n  </Button>&nbsp;&nbsp;&nbsp;\n          <Link className='redButton' id='button' to=\"/\">\n                Cancel\n          </Link>\n            </div>\n          </Form>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default LoginPage;\n\n","import tokenService from \"./tokenService\";\nconst BASE_URL = \"/api/images/\";\n\nexport function create(image) {\n  return fetch(BASE_URL, {\n      method: \"POST\",\n      headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n      body: JSON.stringify(image)\n  }, { mode: \"cors\" })\n      .then(res => res.json());\n}\n\nexport function getForUser(id) {\n  return fetch(`${BASE_URL}user/${id}`, {\n    // headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n  }, {mode: \"cors\"})\n  .then(res => res.json())\n}\n\nexport function getImage(id){\n  return fetch(`${BASE_URL}${id}`)\n  .then(res => res.json())\n}\n\nexport function deleteOne(id) {\n  return fetch(`${BASE_URL}${id}`, {\n      method: 'DELETE',\n      headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n  }, {mode: \"cors\"})\n  .then(res => res.json());\n}\n\nexport function update(image) {\n  return fetch(`${BASE_URL}${image._id}`, {\n      method: \"PUT\",\n      headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n      body: JSON.stringify(image)\n  }, {mode: \"cors\"})\n  .then(res => res.json());\n}","import React, { Component } from 'react';\nimport * as imageAPI from '../../services/images-api'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport './AddImage.css'\n\nclass AddImage extends Component {\n  state = {\n    image: {},\n    invalidForm: true,\n    formData: {\n      title: '',\n      description: '',\n      url: '',\n    }\n  }\n\n  formRef = React.createRef()\n\n  handleAddImage = async newImageData => {\n    await imageAPI.create(newImageData)\n      .then(() => this.props.history.push(`/gallery/${this.props.user._id}`))\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleAddImage(this.state.formData)\n  }\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Add an Image</h1>\n        <div className='yellowButton-div'>\n          <Button href={`/gallery/${this.props.user._id}`} className='yellowButton' id='button'>\n            Cancel\n                </Button>\n        </div>\n        <div className='form-div'>\n          <Form ref={this.formRef} onSubmit={this.handleSubmit}>\n            <div>\n              <Form.Label style={{ padding: '5px' }}>Image Title</Form.Label>\n              <Form.Control name=\"title\" type=\"text\" value={this.state.formData.title} onChange={this.handleChange} required />\n            </div>\n            <div>\n              <Form.Label style={{ padding: '5px' }}>Image Description</Form.Label>\n              <Form.Control name=\"description\" type=\"text\" value={this.state.formData.description} onChange={this.handleChange} required />\n            </div>\n            <div>\n              <Form.Label style={{ padding: '5px' }}>Image Url</Form.Label>\n              <Form.Control name=\"url\" type=\"text\" value={this.state.formData.url} onChange={this.handleChange} required />\n            </div>\n            <div className='button-div'>\n              <Button\n                className='greenButton'\n                id='button'\n                type=\"submit\"\n                disabled={this.state.invalidForm}\n              >\n                Add Image\n                    </Button>\n            </div>\n          </Form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AddImage;","import tokenService from \"./tokenService\";\nconst BASE_URL = \"/api/projects/\";\n\nexport function create(project) {\n    return fetch(BASE_URL, {\n        method: \"POST\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(project)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function getAll() {\n    return fetch(BASE_URL, { mode: \"cors\" })\n        .then(res => res.json())\n}\n\nexport function getUserProjects(id) {\n    return fetch(`${BASE_URL}${id}`, {\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    }, { mode: \"cors\" })\n        .then(res => res.json())\n}\n\nexport function projectDetails(id) {\n    return fetch(`${BASE_URL}project/${id}`)\n        .then(res => res.json())\n}\n\nexport function update(project) {\n    return fetch(`${BASE_URL}${project._id}`, {\n        method: \"PUT\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(project)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function deleteProject(id) {\n    return fetch(`${BASE_URL}${id}`, {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer ' + tokenService.getToken() }\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function attachImage(id, project) {\n    return fetch(`${BASE_URL}image/${project}`, {\n        method: \"PUT\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(id)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function attachSupply(id, project) {\n    return fetch(`${BASE_URL}supply/${project}`, {\n        method: \"PUT\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(id)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function removeSupply(id, project) {\n    return fetch(`${BASE_URL}remove/supply/${project}`, {\n        method: \"PUT\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(id)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function removeImage(id, project) {\n    return fetch(`${BASE_URL}remove/image/${project}`, {\n        method: \"PUT\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(id)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}","import React, { Component } from 'react'\n//import { Link } from 'react-router-dom';\nimport * as projectAPI from '../../services/projects-api'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass AddProject extends Component {\n  state = {\n    invalidForm: false,\n    formData: {\n      name: '',\n      hobby: '',\n      public: 'true',\n      description: '',\n      completed: 'false',\n      dateStarted: '',\n      targetDate: ''\n    }\n  }\n  formRef = React.createRef()\n\n  handleAddProject = async newProjectData => {\n    console.log(\"ADDPROJECT\")\n    await projectAPI.create(newProjectData)\n      .then(() => this.props.history.push(`/projects/${this.props.user._id}`))\n    console.log(\"PROJECTADDED\")\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleAddProject(this.state.formData)\n  }\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Add Project</h1>\n        <Form className=\"form-div\" ref={this.formRef} onSubmit={this.handleSubmit}>\n          <div>\n            <Form.Label >Project Name</Form.Label><br></br>\n            <Form.Control name=\"name\" type=\"text\" value={this.state.formData.name} onChange={this.handleChange} required />\n          </div><br />\n          <div>\n            <Form.Label >Project Description</Form.Label><br></br>\n            <Form.Control as='textarea' name=\"description\" rows=\"5\" cols=\"30\" value={this.state.formData.description} onChange={this.handleChange} >\n              Project description...\n                        </Form.Control>\n          </div><br />\n          <div>\n            <Form.Label >Mini Type <br /> (e.g., Games Workshop, Boardgame Mini, etc)</Form.Label><br></br>\n            <Form.Control name=\"hobby\" type=\"text\" value={this.state.formData.hobby} onChange={this.handleChange} required />\n          </div><br />\n          <div>\n            <Form.Label >Date Started</Form.Label><br></br>\n            <Form.Control name=\"dateStarted\" type=\"date\" value={this.state.formData.dateStarted} onChange={this.handleChange} required />\n          </div><br />\n          <div>\n            <Form.Label >Target Due Date</Form.Label><br></br>\n            <Form.Control name=\"targetDate\" type=\"date\" value={this.state.formData.targetDate} onChange={this.handleChange} required />\n          </div><br />\n          <div>\n            <Form.Control as='select' name=\"public\" onChange={this.handleChange} value={this.state.formData.public} required>\n              <option value=\"true\">Public</option>\n              <option value=\"false\">Private</option>\n            </Form.Control>\n          </div><br />\n          <div>\n            <Form.Control as='select' name=\"completed\" onChange={this.handleChange} value={this.state.formData.completed} required>\n              <option value=\"true\">Complete</option>\n              <option value=\"false\">In Progress</option>\n            </Form.Control>\n          </div><br />\n          <Button\n            className='greenButton'\n            id='button'\n            type=\"submit\"\n            disabled={this.state.invalidForm}\n          >\n            Add Project\n                    </Button><br /><br /><br /><br />\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default AddProject;\n\n\n\n","import tokenService from \"./tokenService\";\nconst BASE_URL = \"/api/supplies/\";\n\nexport function create(supply) {\n  return fetch(BASE_URL, {\n    method: \"POST\",\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    body: JSON.stringify(supply)\n  }, { mode: \"cors\" })\n    .then(res => res.json());\n}\n\nexport function wishlist(wishlist) {\n  return fetch(`${BASE_URL}wishlist/`, {\n    method: \"POST\",\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    body: JSON.stringify(wishlist)\n  }, { mode: \"cors\" })\n    .then(res => res.json());\n}\n\nexport function getForUser() {\n  return fetch(BASE_URL, {\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n  }, { mode: \"cors\" })\n    .then(res => res.json())\n}\n\nexport function getWishList() {\n  return fetch(`${BASE_URL}wishlist`, {\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n  }, { mode: \"cors\" })\n    .then(res => res.json())\n}\n\nexport function wishList(supply) {\n  return fetch(`${BASE_URL}wishlist/${supply._id}`, {\n    method: \"PUT\",\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    body: JSON.stringify(supply)\n  }, { mode: \"cors\" })\n    .then(res => res.json());\n}\n\nexport function ownSupply(supply) {\n  return fetch(`${BASE_URL}own/${supply._id}`, {\n    method: \"PUT\",\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    body: JSON.stringify(supply)\n  }, { mode: \"cors\" })\n    .then(res => res.json());\n}\n\nexport function deleteOne(supply) {\n  return fetch(`${BASE_URL}${supply._id}`, {\n    method: 'DELETE',\n    headers: { 'Authorization': 'Bearer ' + tokenService.getToken() }\n  }, { mode: \"cors\" })\n    .then(res => res.json());\n}\n\nexport function getAllForUser() {\n  return fetch(`${BASE_URL}all`, {\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n  }, { mode: \"cors\" })\n    .then(res => res.json())\n}","import React, { Component } from 'react'\nimport * as supplyAPI from '../../services/supplies-api'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nclass AddSupply extends Component {\n  state = {\n    invalidForm: true,\n    formData: {\n      name: '',\n      type: '',\n      paintType: '',\n      size: '',\n      color: '',\n      brand: '',\n    }\n  }\n\n  formRef = React.createRef()\n\n  handleAddSupply = async newSupplyData => {\n    await supplyAPI.create(newSupplyData)\n      .then(() => this.props.history.push(`/supplydetails/${this.state.formData.type}`))\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleAddSupply(this.state.formData)\n  }\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Add Supply</h1>\n        <div className='form-div'>\n          <Form ref={this.formRef} onSubmit={this.handleSubmit}>\n            <div>\n              <Form.Label style={{ padding: '5px' }}>Name</Form.Label>\n              <Form.Control name=\"name\" type=\"text\" value={this.state.formData.name} onChange={this.handleChange} required />\n            </div>\n            <div>\n              <Form.Label style={{ padding: '5px' }}>Type</Form.Label>\n              <Form.Control as=\"select\" name=\"type\" onChange={this.handleChange} value={this.state.formData.type} required>\n                <option value=\"\"></option>\n                <option value=\"paint\">Paint</option>\n                <option value=\"tool\">Tool</option>\n                <option value=\"brush\">Brush</option>\n                <option value=\"paintacc\">Paint Accessory</option>\n                <option value=\"material\">Material</option>\n                <option value=\"model\">Model</option>\n                <option value=\"other\">Other</option>\n              </Form.Control>\n            </div>\n            {(this.state.formData.type === \"paint\") ?\n              <>\n                <div>\n                  <Form.Label style={{ padding: '5px' }}>Type of Paint</Form.Label>\n                  <Form.Control name=\"paintType\" type=\"text\" value={this.state.formData.paintType} onChange={this.handleChange} />\n                </div>\n                <div>\n                  <Form.Label >Color</Form.Label>\n                  <Form.Control name=\"color\" type=\"text\" value={this.state.formData.color} onChange={this.handleChange} />\n                </div>\n\n              </>\n              : <> </>\n            }\n            <div>\n              <Form.Label style={{ padding: '5px' }}>Size</Form.Label>\n              <Form.Control name=\"size\" type=\"text\" value={this.state.formData.size} onChange={this.handleChange} />\n            </div>\n            <div>\n              <Form.Label style={{ padding: '5px' }}>Brand</Form.Label>\n              <Form.Control name=\"brand\" type=\"text\" value={this.state.formData.brand} onChange={this.handleChange} />\n            </div>\n            <div className='button-div'>\n              <Button\n                className=\"greenButton\"\n                id=\"button\"\n                type=\"submit\"\n                disabled={this.state.invalidForm}\n              >\n                Add Supply\n                    </Button>\n            </div>\n          </Form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AddSupply;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as supplyAPI from '../../services/supplies-api'\nimport Button from 'react-bootstrap/Button'\nimport './AllSupplies.css'\n\nclass AllSupplies extends Component {\n  state = {\n    supplies: []\n  }\n\n  async componentDidMount() {\n    const supplies = await supplyAPI.getForUser();\n    this.setState({ supplies })\n  }\n\n  pullSupply = supply => {\n    const list = this.state.supplies.filter(each => each.type === supply)\n    return list\n  }\n\n  render() {\n    return (\n      <>\n        <h1>All Supplies</h1>\n        <div className=\"supply-card-container\">\n          <Link\n            to={{\n              pathname: '/supplydetails/brush'\n            }}\n          >\n            <img style={{ width: \"100px\", height: \"100px\" }} src=\"/images/brush.png\" alt=\"brush logo\" />\n            <h4>View All Brushes</h4>\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/material'\n            }}\n          >\n            <img style={{ width: \"100px\", height: \"100px\" }} src=\"/images/material.png\" alt=\"materials logo\" />\n            <h4>View All Materials</h4>\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/model'\n            }}\n          >\n            <img style={{ width: \"100px\", height: \"100px\" }} src=\"/images/model.png\" alt=\"models logo\" />\n            <h4>View All Models</h4>\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/other'\n            }}\n          >\n            <img style={{ width: \"100px\", height: \"100px\" }} src=\"/images/other.png\" alt=\"miscellaneous logo\" />\n            <h4>View Miscellaneous</h4>\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/paintacc'\n            }}\n          >\n            <img style={{ width: \"100px\", height: \"100px\" }} src=\"/images/paintacc.png\" alt=\"paint accessories logo\" />\n            <h4>View All Paint Accessories</h4>\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/paint'\n            }}\n          >\n            <img style={{ width: \"100px\", height: \"100px\" }} src=\"/images/paint.png\" alt=\"paint logo\" />\n            <h4>View All Paints</h4>\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/tool'\n            }}\n          >\n            <img style={{ width: \"100px\", height: \"100px\" }} src=\"/images/tool.png\" alt=\"tool logo\" />\n            <h4>View All Tools</h4>\n          </Link>\n        </div>\n        <div className=\"supply-header\">\n          <Button\n            className=\"greenButton\"\n            id='button'\n            href={'/addsupply'}\n          >\n            Add Supply\n        </Button>\n          <Button\n            className='yellowButton'\n            id='button'\n            href='/viewwishlist'\n          >\n            View Wish List\n        </Button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AllSupplies;","import React, { Component } from 'react';\nimport * as imageAPI from '../../services/images-api'\nimport './EditImage.css'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nclass EditImage extends Component {\n  state = {\n    image: {},\n    invalidForm: false,\n    formData: this.props.location.state.image\n  }\n\n  formRef = React.createRef()\n\n  handleUpdateImage = async updatedImageData => {\n    await imageAPI.update(updatedImageData)\n      .then(() => this.props.history.push(`viewimage/${updatedImageData._id}`))\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleUpdateImage(this.state.formData)\n  }\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  }\n\n  render() {\n    const image = this.state.image\n    return (\n      <>\n        <h1>Add an Image</h1>\n        <div className='button-div'>\n          <Button href={`/gallery/${image.user}`} className='yellowButton' id='button'>\n            Back to Gallery\n                </Button>\n        </div>\n\n        <div className='form-div'>\n          <Form ref={this.formRef} onSubmit={this.handleSubmit}>\n            <div>\n              <Form.Label style={{ padding: '10px' }}>Image Title</Form.Label>\n              <Form.Control\n                size='lg'\n                name=\"title\"\n                type=\"text\"\n                value={this.state.formData.title}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div>\n              <Form.Label style={{ padding: '10px' }}>Image Description</Form.Label>\n              <Form.Control\n                name=\"description\"\n                type=\"text\"\n                value={this.state.formData.description}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div>\n              <Form.Label style={{ padding: '10px' }}>Image Url</Form.Label>\n              <Form.Control\n                name=\"url\"\n                type=\"text\"\n                value={this.state.formData.url}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className='button-div'>\n              <Button\n                className='purpleButton'\n                id='button'\n                type=\"submit\"\n                disabled={this.state.invalidForm}\n              >\n                Update Image\n                    </Button>\n            </div>\n          </Form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EditImage;","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nclass EditProfile extends Component {\n  state = {\n    invalidForm: false,\n    formData: this.props.location.state\n  }\n\n  formRef = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleUpdateUser(this.state.formData);\n  };\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Edit Profile</h1>\n        <div className='form-div'>\n          <Form ref={this.formRef} autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <Form.Label>User Name</Form.Label>\n              <Form.Control\n                className=\"form-control\"\n                name=\"name\"\n                value={this.state.formData.name}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <Form.Label>User Icon</Form.Label>\n              <Form.Control\n                id=\"iconUrl\"\n                name=\"icon\"\n                value={this.state.formData.icon}\n                onChange={this.handleChange}\n              />\n            </div>\n            <div className='editProfile-button-div'>\n              <Button\n                className='purpleButton'\n                id='button'\n                type=\"submit\"\n                disabled={this.state.invalidForm}\n              >\n                Update User\n                    </Button>\n              <br />\n              <Button\n                className='redButton'\n                id='button'\n                href={`/profile/${this.props.location.state._id}`}>\n                CANCEL\n            </Button>\n            </div>\n          </Form>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default EditProfile;","import React, { Component } from 'react'\nimport './SupplyTable.css'\nimport Table from 'react-bootstrap/Table'\n\nclass SupplyTable extends Component {\n  state = {\n    tableVisible: false\n  }\n\n  hasSupply = (supplies, supID) => {\n    let result = false\n    supplies.forEach(s => {\n      if (s._id === supID) {\n        result = true\n      }\n    })\n    return result\n  }\n\n  toggleVisiableClickHandler = () => {\n    this.setState((state) => {\n      return { tableVisible: !state.tableVisible }\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h4\n          className=\"table-header\"\n          onClick={() => this.toggleVisiableClickHandler()}\n        >{this.props.type}</h4>\n        <div className='table-div' id='supply-table'>\n          <div className={this.state.tableVisible ? '' : 'hidden'}>\n            <Table striped bordered hover size='sm' variant='light' className='table'>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Paint Type</th>\n                  <th>On Wish List?</th>\n                  <th>Attatch to Project?</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.props.supplies.map((supply, idx) =>\n                  <tr key={idx}>\n                    <td>{supply.name}</td>\n                    <td>{supply.paintType}</td>\n                    <td>{supply.own ? '' : 'Y'}</td>\n                    <td>{this.hasSupply(this.props.project.supplies, supply._id) ?\n                      <button onClick={() => this.props.handleRemoveSupply(supply._id, this.props.projectID)} className='redButton' id='button'>Detatch</button>\n                      :\n                      <button onClick={() => this.props.handleAttachSupply(supply._id, this.props.projectID)} className='greenButton' id='button'>Attach</button>\n                    }</td>\n                  </tr>\n                )}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplyTable;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button'\n\nclass AttachImageCard extends Component {\n  state = {\n\n  }\n\n  hasImage = (images, imgID) => {\n    let result = false\n    images.forEach(i => {\n      if (i._id === imgID) {\n        result = true\n      }\n    })\n    return result\n  }\n\n  render() {\n    return (\n      <>\n        <div><img width=\"200\" src={this.props.image.url} alt={this.props.image.title}></img></div>\n        <div className=\"button-div\">{this.hasImage(this.props.project.images, this.props.image._id) ?\n          <Button onClick={() => this.props.handleRemoveImage(this.props.image._id, this.props.projectID)} className='redButton' id='button'>Detatch Image</Button>\n          :\n          <Button onClick={() => this.props.handleAttachImage(this.props.image._id, this.props.projectID)} className='greenButton' id='button'>Attatch Image</Button>\n        }</div>\n      </>\n    );\n  }\n}\n\nexport default AttachImageCard;","import React, { Component } from 'react'\nimport * as projectAPI from '../../services/projects-api'\nimport * as imageAPI from '../../services/images-api'\nimport * as suppliesAPI from '../../services/supplies-api'\nimport SupplyTable from '../../components/SupplyTable/SupplyTable'\nimport AttachImageCard from '../../components/AttachImageCard/AttachImageCard'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport './EditProject.css'\n\nconst types = [\n  ['paint', 'Paints'], ['brush', 'Brushes'], ['model', 'Models'], ['paintacc', 'Paint Accessories'], ['other', 'Other Supplies'], ['tool', 'Tools'], ['material', 'Materials']\n]\n\nclass EditProject extends Component {\n  state = {\n    invalidForm: false,\n    formData: this.props.location.state.project,\n    images: [],\n    project: this.props.location.state.project,\n    supplies: []\n  }\n\n  formRef = React.createRef()\n\n  handleUpdateProject = async projectUpdate => {\n    await projectAPI.update(projectUpdate)\n      .then(() => this.props.history.push(`projectdetails/${projectUpdate._id}`))\n  }\n\n  async componentDidMount() {\n    const images = await imageAPI.getForUser(this.props.user._id);\n    const supplies = await suppliesAPI.getAllForUser();\n    // I don't think the API uses the user id, but if it does - this.props.user._id\n    this.setState({ images, supplies })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleUpdateProject(this.state.formData)\n  }\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  }\n\n  handleAttachImage = async (id, project) => {\n    const imageID = { boop: id }\n    await projectAPI.attachImage(imageID, project)\n    // .then(() => this.props.history.push(`projectdetails/${project}`))\n    const image = this.state.images.find(i => i._id === id)\n    const updatedProject = this.state.project\n    updatedProject.images.push(image)\n    this.setState({ project: updatedProject })\n  }\n\n  handleRemoveImage = async (id, project) => {\n    const supplyID = { boop: id }\n    await projectAPI.removeImage(supplyID, project)\n    // .then(() => this.props.history.push(`/projectdetails/${project}`))\n    const updatedProject = this.state.project\n    const idx = updatedProject.images.findIndex(i => i._id === id)\n    updatedProject.images.splice(idx, 1)\n    this.setState({ project: updatedProject })\n  }\n\n  handleAttachSupply = async (id, project) => {\n    const supplyID = { boop: id }\n    await projectAPI.attachSupply(supplyID, project)\n    //     .then(() => this.props.history.push(`projectdetails/${project}`))\n    // rather than redirect, say on this page, but we will need to manually add the supply to the project in state, since componentDidMount will not file again\n    // The following code has been tested to work:\n    const supply = this.state.supplies.find(s => s._id === id)\n    const updatedProject = this.state.project\n    updatedProject.supplies.push(supply)\n    this.setState({ project: updatedProject })\n  }\n\n  handleRemoveSupply = async (id, project) => {\n    const supplyID = { boop: id }\n    await projectAPI.removeSupply(supplyID, project)\n    // .then(() => this.props.history.push(`/projectdetails/${project}`))\n    const updatedProject = this.state.project\n    const idx = updatedProject.supplies.findIndex(s => s._id === id)\n    updatedProject.supplies.splice(idx, 1)\n    this.setState({ project: updatedProject })\n  }\n\n  hasSupply = (supplies, supID) => {\n    let result = false\n    supplies.forEach(s => {\n      if (s._id === supID) {\n        result = true\n      }\n    })\n    return result\n  }\n\n  pullSupply = supply => {\n    const list = this.state.supplies.filter(each => each.type === supply)\n    return list\n  }\n\n  render() {\n    const projectID = this.state.formData._id\n    return (\n      <>\n        <Container className='projects-container'>\n          <Container className='edit-project-form'>\n            <h1>Edit Project</h1>\n            <Form ref={this.formRef} onSubmit={this.handleSubmit}>\n              <div>\n                <Form.Label >Project Name</Form.Label><br></br>\n                <Form.Control name=\"name\" type=\"text\" value={this.state.formData.name} onChange={this.handleChange} required />\n              </div><br />\n              <div>\n                <Form.Label >Project Description</Form.Label><br></br>\n                <Form.Control as='textarea' name=\"description\" rows=\"5\" cols=\"30\" value={this.state.formData.description} onChange={this.handleChange} >\n                  Project description...\n                        </Form.Control>\n              </div><br />\n              <div>\n                <Form.Label >Mini Type <br /> (e.g., Games Workshop, Boardgame Mini, etc)</Form.Label><br></br>\n                <Form.Control name=\"hobby\" type=\"text\" value={this.state.formData.hobby} onChange={this.handleChange} required />\n              </div><br />\n              <div>\n                <Form.Label >Date Started</Form.Label><br></br>\n                <Form.Control style={{ width: '50%', margin: '0 auto' }} name=\"dateStarted\" type=\"date\" value={this.state.formData.dateStarted} onChange={this.handleChange} required />\n              </div><br />\n              <div>\n                <Form.Label >Target Due Date</Form.Label><br></br>\n                <Form.Control style={{ width: '50%', margin: '0 auto' }} name=\"targetDate\" type=\"date\" value={this.state.formData.targetDate} onChange={this.handleChange} required />\n              </div><br />\n              <div>\n                <Form.Control style={{ width: '50%', margin: '0 auto' }} as='select' size='sm' name=\"public\" onChange={this.handleChange} value={this.state.formData.public} required>\n                  <option value=\"true\">Public</option>\n                  <option value=\"false\">Private</option>\n                </Form.Control>\n              </div><br />\n              <div>\n                <Form.Control style={{ width: '50%', margin: '0 auto' }} as='select' size='sm' name=\"completed\" onChange={this.handleChange} value={this.state.formData.completed} required>\n                  <option value=\"true\">Complete</option>\n                  <option value=\"false\">In Progress</option>\n                </Form.Control>\n              </div><br />\n              <Button\n                style={{ margin: '0 auto' }}\n                className='purpleButton'\n                id='button'\n                type=\"submit\"\n                disabled={this.state.invalidForm}\n              >\n                Update Project\n                    </Button>\n            </Form>\n          </Container>\n\n          <Container className='attach-supplies-container'>\n            <h2>Attach Supplies</h2>\n            {types.map((type, idx) =>\n              <Row key={idx} id='rows'>\n                <SupplyTable\n                  id='supply-table'\n                  type={type[1]}\n                  supplies={this.pullSupply(type[0])}\n                  projectID={projectID}\n                  project={this.state.project}\n                  handleAttachSupply={this.handleAttachSupply}\n                  handleRemoveSupply={this.handleRemoveSupply}\n                />\n              </Row>\n            )}\n          </Container>\n        </Container>\n\n        <h2>Attach Images</h2>\n        <Container className='gallery-container'>\n          {this.state.images.map((image, idx) =>\n            <Col key={idx}>\n              <AttachImageCard\n                image={image}\n                projectID={projectID}\n                project={this.state.project}\n                handleAttachImage={this.handleAttachImage}\n                handleRemoveImage={this.handleRemoveImage}\n              />\n            </Col>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default EditProject;","import React from 'react'\nimport '../../pages/Gallery/Gallery.css'\n\nconst ImageCard = ({ image }) => {\n  return (\n    <div className='image-card'>\n      <h3>{image.title}</h3>\n      <img src={image.url} width=\"300\" alt={image.description}></img>\n    </div>\n  );\n}\n\nexport default ImageCard;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport * as imageAPI from '../../services/images-api'\nimport ImageCard from '../../components/ImageCard/ImageCard'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport './Gallery.css'\n\nclass Gallery extends Component {\n  state = {\n    images: []\n  }\n\n  async componentDidMount() {\n    const images = await imageAPI.getForUser(this.props.match.params.id);\n    this.setState({ images })\n  }\n\n  render() {\n    const user = this.props.user\n    return (\n      <>\n        <h1>Gallery</h1>\n        {user && (user._id === this.props.match.params.id) &&\n          <>\n            <div id=\"add-image-div\">\n              <Button\n                className=\"greenButton\"\n                id='button'\n                href=\"/addimage\"\n              >\n                Add Image\n                </Button>\n            </div>\n          </>}\n        <Container className='gallery-container'>\n          {this.state.images.map((image, idx) =>\n            <Col key={image.idx}>\n              <Link\n                to={{\n                  pathname: `/viewimage/${image._id}`\n                }}\n              >\n                <ImageCard\n                  className=\"card\"\n                  image={image}\n                />\n              </Link>\n            </Col>\n          )}\n        </Container>\n        {/* <Link to=\"/wiewimage\">\n                    View Image\n                </Link><br />\n                <Link to=\"/editimage\">\n                    Edit Image\n                </Link><br /> */}\n      </>\n    );\n  }\n}\n\nexport default Gallery;","import React, { Component } from 'react';\n\nclass LandingPage extends Component {\n  state = {}\n  render() {\n    const user = this.props.user\n    return (\n      <>\n        <h1>Welcome to Chrominia</h1>\n\n        <p>Chrominia is a social project tracker for miniature building and painting, <br />intended for hobbyists who want to track their progress from purchase to parade!</p>\n\n        <p>\n          To make the most of Chrominia, we suggest you make a <a href=\"/signup\">profile</a>.\n\n\n        </p>\n        <p>\n          Once you've created your profile, head on over to the <a href=\"/allsupplies\">supplies page</a> to keep track of your brushes, paints, and models!<br />\n          Or add supplies to your <a href={`/viewwishlist`}> wishlist</a>!\n        </p>\n        {user && (user._id === this.props.user._id) &&\n          <>\n            <p>\n              Don't forget to show your favorite work off in your <a href={`/gallery/${this.props.user._id}`}>image gallery</a> - <br />\n            and then attach those images and supplies to a new <a href={`/projects/${this.props.user._id}`}>project</a>!\n          </p>\n          </>\n        }\n      </>\n    );\n  }\n}\n\n\n\nexport default LandingPage;","import tokenService from \"../services/tokenService\";\nconst BASE_URL = \"/api/users/\";\n\nexport function getAllUsers() {\n  return fetch(\n    BASE_URL,\n    {\n      headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n    },\n    { mode: \"cors\" }\n  ).then((res) => res.json());\n}\n\n// export function update(user) {\n//   return fetch(`${BASE_URL}${user._id}`, {\n//     method: 'PUT',\n//     headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n//     body: JSON.stringify(user)\n//   }, { mode: \"cors\" })\n//     .then((res) => res.json())\n// }\n\nexport function update(user) {\n  return fetch(`${BASE_URL}${user._id}`, {\n    method: 'PUT',\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    body: JSON.stringify(user)\n  }, { mode: \"cors\" })\n  //controller should return a token, remove the existing token and write in the new one\n    .then((res) => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error(\"Bad Credentials!\");\n    })  \n    .then(({ token }) => {\n      tokenService.removeToken()\n      tokenService.setToken(token)\n    });\n}\n\nexport function showProfile(id) {\n  return fetch(`${BASE_URL}${id}`, {\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() }\n  })\n    .then((res) => res.json())\n}\n\nexport default {\n  getAllUsers,\n  update,\n  showProfile\n};","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport * as userAPI from '../../services/userService'\nimport './ProfilePage.css'\n\nclass ProfilePage extends Component {\n  state = {\n    profile: { createdAt: '' }\n  }\n\n  async componentDidMount() {\n    const profile = await userAPI.showProfile(this.props.match.params.id);\n    this.setState({ profile })\n  }\n\n  render() {\n    const user = this.props.user\n    const profile = this.state.profile\n    return (\n      <>\n        {/* <h1>Welcome, {this.props.user.name}</h1> */}\n        <div className=\"profile-div\">\n          <img src={profile.icon} alt=\"User Icon\" width=\"150\" className=\"profile\"></img>\n          <p>Name: {profile.name}</p>\n          <p>Member Since: {profile.createdAt.slice(0, 10)}</p>\n          <div className='profile-button-div'>\n            <Link to={`/projects/${profile._id}`} className='yellowButton' id='button'>Projects</Link>\n            <Link to={`/gallery/${profile._id}`} className='yellowButton' id='button'>Gallery</Link>\n\n          </div>\n          <div id='edit-profile-div'>\n            {user && (user._id === profile._id) &&\n              <Link\n                id='button'\n                className='purpleButton'\n                to={{\n                  pathname: \"/editprofile\",\n                  state: this.props.user\n                }}\n              >\n                Edit Profile\n            </Link>\n            }\n          </div>\n        </div>\n\n        <br />\n\n        <br />\n        {/* <Link to=\"/allsupplies\">Supplies</Link> */}\n        <br />\n      </>\n    );\n  }\n}\n\nexport default ProfilePage;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport * as projectAPI from '../../services/projects-api'\nimport authService from '../../services/authService'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport './ProjectDetails.css'\n\nclass ProjectDetails extends Component {\n  state = {\n    project: {\n      images: [],\n      supplies: []\n    }\n  }\n\n  async componentDidMount() {\n    const project = await projectAPI.projectDetails(this.props.match.params.id)\n    this.setState({ project })\n  }\n\n  handleDeleteProject = async id => {\n    if (authService.getUser()) {\n      await projectAPI.deleteProject(id)\n        .then(() => this.props.history.push(`/projects/${this.props.user._id}`));\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n\n  render() {\n    const project = this.state.project\n    const user = this.props.user\n    return (\n      <>\n        <h1>{project.name}</h1>\n        <Container className=\"project-details-container\">\n          <Row id='project-row'>\n            <p>Description: {project.description}</p>\n            <p>Hobby: {project.hobby}</p>\n            <p>Date Started: {project.dateStarted}</p>\n            {/* consider adding a function to turn the date string from 2020-10-03 to 10-03-2020 */}\n          </Row>\n        </Container>\n\n        <h2>Project Supplies</h2>\n        <Container className=\"project-supplies-container\">\n          {this.state.project.supplies.map((supply, idx) =>\n            <Col key={idx} className={supply.own ? 'black' : 'grey'} >\n              <p>Type: {supply.type}< br />\n                                Name: {supply.name}< br />\n                                Brand: {supply.brand}</p>\n            </Col>\n          )}\n        </Container>\n\n        <h2>Project Images</h2>\n        <Container className=\"project-images-container\">\n          {this.state.project.images.map((images, idx) =>\n            <Row id='rows'>\n              <img key={idx} width=\"100\" src={this.state.project.images[idx].url} alt=\"\" />\n            </Row>\n          )}\n        </Container>\n\n        {user && (user._id === project.user) &&\n          <div className=\"button-div\" id='project-details-buttons'>\n            <Link\n              className='purpleButton'\n              id='button'\n              to={{\n                pathname: '/editproject',\n                state: { project },\n              }}\n            >\n              Edit Project\n                            </Link>\n            <Button type=\"submit\" onClick={() => this.handleDeleteProject(project._id)} className=\"redButton\" id='button'>\n              Delete Project\n                            </Button>\n          </div>\n        }\n      </>\n    );\n  }\n}\n\nexport default ProjectDetails;","import React from 'react'\nimport Card from 'react-bootstrap/Card'\n\nconst ProjectCard = ({ project }) => {\n  return (\n    <div>\n      <Card style={{ width: '20rem' }} className='imgCard'>\n        <Card.Body>\n          <Card.Title> <h3>{project.name}</h3> </Card.Title>\n          <Card.Img\n            variant=\"top\"\n            src={project.images.length ? project.images[0].url : 'https://i.imgur.com/NthKWeT.png'}\n            width=\"200\"\n          >\n          </Card.Img>\n\n          <Card.Text>\n            {/* <p>Description: {project.description}</p>\n            <p>Public? {project.public}</p>\n            <p>Hobby: {project.hobby}</p>\n            <p>Date Started: {project.dateStarted}</p>\n            <p>Due Date: {project.targetDate}</p>\n            <p>Complete? {project.completed}</p> */}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\n\nexport default ProjectCard;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport * as projectAPI from '../../services/projects-api'\nimport ProjectCard from '../../components/ProjectCard/ProjectCard'\nimport Button from 'react-bootstrap/Button'\nimport './Projects.css';\n\nclass Project extends Component {\n  state = {\n    projects: []\n  }\n\n  async componentDidMount() {\n    const projects = await projectAPI.getUserProjects(this.props.match.params.id);\n    this.setState({ projects })\n  }\n\n  render() {\n    return (\n      <>\n        <h1>My Projects</h1>\n        <div className=\"button-div\" id='add-project-div'>\n          <Button href=\"/addproject\" className=\"greenButton\" id='button'>\n            Add a Project\n                </Button><br />\n        </div>\n        <div className=\"project-card\">\n          {this.state.projects.map((project, idx) =>\n            <Link\n              key={idx}\n              to={{\n                pathname: `/projectdetails/${project._id}`\n              }}\n            >\n              <ProjectCard\n                project={project}\n              />\n            </Link>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as imageAPI from '../../services/images-api'\nimport authService from '../../services/authService'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport './ViewImage.css'\n\nclass ViewImage extends Component {\n  state = {\n    image: {},\n  }\n\n  async componentDidMount() {\n    const image = await imageAPI.getImage(this.props.match.params.id)\n    this.setState({ image })\n  }\n\n  handleDeleteImage = async id => {\n    if (authService.getUser()) {\n      await imageAPI.deleteOne(id)\n        .then(() => this.props.history.push(`/gallery/${this.state.image.user}`));\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n\n  render() {\n    const image = this.state.image\n    const user = this.props.user\n    return (\n      <>\n        <div className='yellowButton-div'>\n          <Button href={`/gallery/${image.user}`} className='yellowButton' id='button'>\n            Back to Gallery\n                </Button>\n        </div>\n\n\n        {user && (user._id === image.user) &&\n          <div className='card-container'>\n            <Card style={{ width: '28rem' }} className='imgCard'>\n              <Card.Img variant=\"top\" src={image.url} width=\"300\" alt={image.description}></Card.Img>\n              <Card.Body>\n                <Card.Title>{image.title}</Card.Title>\n                <Card.Text><p>{image.description}</p></Card.Text>\n                <div className='button-divs'>\n                  <Link\n                    className='purpleButton'\n                    id='button'\n                    to={{\n                      pathname: '/editimage',\n                      state: { image }\n                    }}\n                  >\n                    Edit Image\n                            </Link>\n                  <Button type=\"submit\" onClick={() => this.handleDeleteImage(image._id)} className='redButton' id='button'>\n                    Delete Image\n                            </Button>\n                </div>\n              </Card.Body>\n            </Card>\n          </div>\n        }\n      </>\n    );\n  }\n}\n\nexport default ViewImage;\n","import React, { Component } from 'react'\nimport * as supplyAPI from '../../services/supplies-api'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport './ViewWishList.css'\n\nclass ViewWishList extends Component {\n  state = {\n    wishList: []\n  }\n\n  async componentDidMount() {\n    const wishList = await supplyAPI.getWishList();\n    this.setState({ wishList })\n  }\n\n  handleOwnSupply = async supply => {\n    await supplyAPI.ownSupply(supply)\n    this.setState(state => ({\n      wishList: state.wishList.filter(s => s._id !== supply._id)\n    }))\n  }\n\n  handleDeleteSupply = async supply => {\n    await supplyAPI.deleteOne(supply)\n    this.setState(state => ({\n      wishList: state.wishList.filter(s => s._id !== supply._id)\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Supply Wish List</h1>\n        <div className=\"wish-button-div\">\n          <Button\n            className=\"greenButton\"\n            id='button'\n            href={'/addwishlist'}\n          >\n            Add to Wish List\n        </Button>\n        </div>\n        <div className='table-div'>\n          <Table striped bordered hover size='sm' variant='light' className='table'>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Paint Type</th>\n                <th>Color</th>\n                <th>Size</th>\n                <th>Brand</th>\n                <th>Own?</th>\n                <th>Remove?</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.wishList.map((supply, idx) =>\n                <tr key={idx}>\n                  <td>{supply.name}</td>\n                  <td>{supply.type}</td>\n                  <td>{supply.paintType}</td>\n                  <td>{supply.color}</td>\n                  <td>{supply.size}</td>\n                  <td>{supply.brand}</td>\n                  <td align='center'><Button onClick={() => this.handleOwnSupply(supply)} className='irisButton' id='button'>Own Supply</Button></td>\n                  <td align='center'><Button onClick={() => this.handleDeleteSupply(supply)} className='redButton' id='button'>Remove</Button></td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ViewWishList;","import React, { Component } from 'react';\nimport * as supplyAPI from '../../services/supplies-api'\nimport './SupplyDetails.css'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\n\nconst types = [\n  ['paint', 'Paint'], ['brush', 'Brush'], ['model', 'Model'], ['paintacc', 'Paint Accessory'], ['other', 'Other Supply'], ['tool', 'Tool'], ['material', 'Material']\n]\n\nclass SupplyDetails extends Component {\n  state = {\n    supplies: []\n  }\n\n  async componentDidMount() {\n    const allSupplies = await supplyAPI.getForUser();\n    const supplies = allSupplies.filter(each => each.type === this.props.match.params.supply)\n    this.setState({ supplies })\n  }\n\n  handleWishListSupply = async supply => {\n    await supplyAPI.wishList(supply)\n    this.setState(state => ({\n      supplies: state.supplies.filter(s => s._id !== supply._id)\n    }))\n  }\n\n  handleDeleteSupply = async supply => {\n    await supplyAPI.deleteOne(supply)\n    this.setState(state => ({\n      supplies: state.supplies.filter(s => s._id !== supply._id)\n    }))\n  }\n\n  printType = type => {\n    let result\n    types.forEach(each => {\n      if (each[0] === type) {\n        result = each[1]\n      }\n    })\n    return result\n  }\n\n  render() {\n    const type = this.printType(this.props.match.params.supply)\n    return (\n      <>\n        <h1>{type} Details</h1>\n        <div className='button-div' id='add-supply-button'>\n          <Button\n            className=\"greenButton\"\n            id='button'\n            href={'/addsupply'}\n          >\n            Add Supply\n        </Button>\n        </div>\n        <div className='table-div'>\n          <Table striped bordered hover size='sm' variant='light'>\n            <thead>\n              <tr>\n                <th>Name</th>\n                {this.props.match.params.supply === 'paint' &&\n                  <>\n                    <th>Paint Type</th>\n                    <th>Color</th>\n                  </>\n                }\n                <th>Size</th>\n                <th>Brand</th>\n                <th>Wish List?</th>\n                <th>Remove?</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.supplies.map((supply, idx) =>\n                <tr key={idx}>\n                  <td>{supply.name}</td>\n                  {this.props.match.params.supply === 'paint' &&\n                    <>\n                      <td>{supply.paintType}</td>\n                      <td>{supply.color}</td>\n                    </>\n                  }\n                  <td>{supply.size}</td>\n                  <td>{supply.brand}</td>\n                  <td align='center'><button onClick={() => this.handleWishListSupply(supply)} className='irisButton' id='button'>Wish List</button></td>\n                  <td align='center'><button onClick={() => this.handleDeleteSupply(supply)} className='redButton' id='button'>Remove</button></td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SupplyDetails;","import React, { Component } from 'react'\nimport * as supplyAPI from '../../services/supplies-api'\nimport Button from 'react-bootstrap/Button'\nimport './AddWishList.css'\nimport Form from 'react-bootstrap/Form'\n\nclass AddWishList extends Component {\n  state = {\n    invalidForm: true,\n    formData: {\n      name: '',\n      type: '',\n      paintType: '',\n      size: '',\n      color: '',\n      brand: '',\n    }\n  }\n\n  formRef = React.createRef()\n\n  handleAddSupply = async newWishListData => {\n    await supplyAPI.wishlist(newWishListData)\n      .then(() => this.props.history.push('/viewwishlist'))\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleAddSupply(this.state.formData)\n  }\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Add to Wish List</h1>\n        <div className='form-div'>\n          <Form ref={this.formRef} onSubmit={this.handleSubmit}>\n            <div>\n              <Form.Label style={{ padding: '5px' }}>Name</Form.Label>\n              <Form.Control name=\"name\" type=\"text\" value={this.state.formData.name} onChange={this.handleChange} required />\n            </div>\n            <div>\n              <Form.Label >Type</Form.Label>\n              <Form.Control as=\"select\" name=\"type\" onChange={this.handleChange} value={this.state.formData.type} required>\n                <option value=\"\"></option>\n                <option value=\"paint\">Paint</option>\n                <option value=\"tool\">Tool</option>\n                <option value=\"brush\">Brush</option>\n                <option value=\"paintacc\">Paint Accessory</option>\n                <option value=\"material\">Material</option>\n                <option value=\"model\">Model</option>\n                <option value=\"other\">Other</option>\n              </Form.Control>\n            </div>\n            {this.state.formData.type === \"paint\" &&\n              <>\n                <div>\n                  <Form.Label style={{ padding: '5px' }}>Type of Paint</Form.Label>\n                  <Form.Control name=\"paintType\" type=\"text\" value={this.state.formData.paintType} onChange={this.handleChange} />\n                </div>\n                <div>\n                  <Form.Label >Color</Form.Label>\n                  <Form.Control name=\"color\" type=\"text\" value={this.state.formData.color} onChange={this.handleChange} />\n                </div>\n\n              </>\n            }\n            <div>\n              <Form.Label style={{ padding: '5px' }} >Size</Form.Label><br></br>\n              <Form.Control name=\"size\" type=\"text\" value={this.state.formData.size} onChange={this.handleChange} />\n            </div>\n            <div>\n              <Form.Label style={{ padding: '5px' }} >Brand</Form.Label><br></br>\n              <Form.Control name=\"brand\" type=\"text\" value={this.state.formData.brand} onChange={this.handleChange} />\n            </div>\n            <div className='button-div'>\n              <Button\n                className='greenButton'\n                id='button'\n                type=\"submit\"\n                disabled={this.state.invalidForm}\n              >\n                Add to Wish List\n            </Button>\n            </div>\n          </Form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AddWishList;","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport Signup from \"../Signup/Signup\";\nimport Login from \"../Login/Login\";\nimport authService from \"../../services/authService\";\nimport \"./App.css\";\nimport AddImage from '../AddImage/AddImage'\nimport AddProject from '../AddProject/AddProject'\nimport AddSupply from '../AddSupply/AddSupply'\nimport AllSupplies from '../AllSupplies/AllSupplies'\nimport EditImage from '../EditImage/EditImage'\nimport EditProfile from '../EditProfile/EditProfile'\nimport EditProject from '../EditProject/EditProject'\nimport Gallery from '../Gallery/Gallery'\nimport LandingPage from '../LandingPage/LandingPage'\nimport ProfilePage from '../ProfilePage/ProfilePage'\nimport ProjectDetails from '../ProjectDetails/ProjectDetails'\nimport Projects from '../Projects/Projects'\n// import Users from '../Users/Users'\nimport ViewImage from '../ViewImage/ViewImage'\nimport ViewWishList from '../ViewWishList/ViewWishList'\nimport SupplyDetails from '../SupplyDetails/SupplyDetails'\nimport AddWishList from '../AddWishList/AddWishList'\nimport userService from '../../services/userService'\n\nclass App extends Component {\n  state = {\n    user: authService.getUser(),\n  };\n\n  handleUpdateUser = async updatedUserData => {\n    await userService.update(updatedUserData)\n    this.setState({ user: authService.getUser() })\n    this.props.history.push(`profile/${updatedUserData._id}`)\n    // .then(() => this.props.history.push(`profile/${updatedUserData._id}`))\n  }\n\n  handleLogout = () => {\n    authService.logout();\n    this.setState({ user: null });\n  };\n\n  handleSignupOrLogin = () => {\n    this.setState({ user: authService.getUser() });\n  };\n\n  render() {\n    const { user } = this.state\n    return (\n      <>\n        <NavBar user={user} handleLogout={this.handleLogout} />\n        <main>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <LandingPage\n                user={this.state.user}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            render={({ history }) => (\n              <Signup\n                history={history}\n                handleSignupOrLogin={this.handleSignupOrLogin}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={({ history }) => (\n              <Login\n                history={history}\n                handleSignupOrLogin={this.handleSignupOrLogin}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/addimage\"\n            render={({ history }) => (\n              authService.getUser() ?\n                <AddImage\n                  user={this.state.user}\n                  history={history}\n                />\n                :\n              <Redirect to='/login' />\n            )}\n          />\n          <Route\n            exact\n            path=\"/addproject\"\n            render={({ history }) => (\n              authService.getUser() ?\n              <AddProject\n                history={history}\n                user={this.state.user}\n              />\n              :\n              <Redirect to='/login' />\n            )}\n          />\n          <Route\n            exact\n            path=\"/addsupply\"\n            render={({ history }) => (\n              authService.getUser() ?\n              <AddSupply\n                history={history}\n              />\n              :\n              <Redirect to='/login' />\n            )}\n          />\n          <Route\n            exact\n            path=\"/addwishlist\"\n            render={({ history }) => (\n              authService.getUser() ?\n              <AddWishList\n                history={history}\n              />\n              :\n              <Redirect to='/login' />\n            )}\n          />\n          <Route\n            exact\n            path=\"/allsupplies\"\n            render={() => (\n\n              authService.getUser() ?\n              <AllSupplies />\n              :\n              <Redirect to='/login' />\n            )}\n          />\n          <Route\n            exact\n            path=\"/editimage\"\n            render={({ location, history }) => (\n\n              authService.getUser() ?\n              <EditImage\n                location={location}\n                history={history}\n                user={this.state.user}\n              />\n              :\n              <Redirect to='/login' />\n            )}\n          />\n          <Route\n            exact\n            path=\"/editprofile\"\n            render={({ location, history }) => (\n              authService.getUser() ?\n\n              <EditProfile\n                history={history}\n                location={location}\n                handleUpdateUser={this.handleUpdateUser}\n              />\n              :\n              <Redirect to='/login' />\n            )}\n          />\n          <Route\n            exact\n            path=\"/editproject\"\n            render={({ history, location }) => (\n              authService.getUser() ?\n              <EditProject\n                history={history}\n                location={location}\n                user={this.state.user}\n              />\n              :\n              <Redirect to='/login' />\n            )}\n          />\n          <Route\n            exact\n            path=\"/gallery/:id\"\n            render={({ match }) => (\n              <Gallery\n                match={match}\n                user={this.state.user}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/profile/:id\"\n\n            render={({ match }) => (\n              <ProfilePage\n                user={this.state.user}\n                match={match}\n              />\n             \n            )}\n\n          />\n          <Route\n            exact\n            path=\"/projectdetails/:id\"\n            render={({ match, history }) => (\n              \n              <ProjectDetails\n                match={match}\n                history={history}\n                user={this.state.user}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/projects/:id\"\n            render={({ match }) => (\n              <Projects\n                match={match}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/supplydetails/:supply\"\n            render={({ match }) => (\n              authService.getUser() ?\n              <SupplyDetails\n                match={match}\n              />\n              :\n              <Redirect to='/login' />\n            )}\n          />\n          <Route\n            exact\n            path=\"/viewimage/:id\"\n\n            render={({ match, history }) => (\n\n\n              <ViewImage\n                match={match}\n                history={history}\n                user={this.state.user}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/viewwishlist\"\n            render={() => (\n              authService.getUser() ?\n              <ViewWishList />\n              :\n              <Redirect to='/login' />\n            )}\n          />\n          {/* <Route\n            path=\"/users\"\n            render={() => (\n              <Users />\n            )}\n          /> */}\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Route render={({ history }) => <App history={history} />} />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}