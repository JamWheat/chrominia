{"version":3,"sources":["components/NavBar/NavBar.jsx","services/tokenService.js","services/authService.js","components/SignupForm/SignupForm.jsx","pages/Signup/Signup.jsx","pages/Login/Login.jsx","services/images-api.js","pages/AddImage/AddImage.jsx","services/projects-api.js","pages/AddProject/AddProject.jsx","services/supplies-api.js","pages/AddSupply/AddSupply.jsx","components/SuppliesCard/SuppliesCard.jsx","pages/AllSupplies/AllSupplies.jsx","pages/EditImage/EditImage.jsx","pages/EditProfile/EditProfile.jsx","components/ImageCard/ImageCard.jsx","components/SupplyTable/SupplyTable.jsx","pages/EditProject/EditProject.jsx","pages/Gallery/Gallery.jsx","pages/LandingPage/LandingPage.jsx","services/userService.js","pages/ProfilePage/ProfilePage.jsx","pages/ProjectDetails/ProjectDetails.jsx","components/ProjectCard/ProjectCard.jsx","pages/Projects/Projects.jsx","pages/Users/Users.jsx","pages/ViewImage/ViewImage.jsx","pages/ViewWishList/ViewWishList.jsx","pages/SupplyDetails/SupplyDetails.jsx","pages/AddWishList/AddWishList.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["NavBar","user","handleLogout","href","_id","name","id","onClick","Navbar","className","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","getUserFromToken","removeToken","signup","fetch","BASE_URL","method","headers","Headers","body","stringify","then","res","console","log","json","Error","err","tokenService","getUser","logout","login","creds","ok","SignupForm","state","email","password","passwordConf","handleChange","e","props","updateMessage","setState","target","value","handleSubmit","a","history","handleSignupOrLogin","preventDefault","authService","push","message","this","Form","autoComplete","onSubmit","Label","htmlFor","Group","controlId","Control","type","onChange","class","disabled","isFormInvalid","to","Component","Signup","msg","LoginPage","pw","alert","placeholder","Button","variant","create","image","mode","getForUser","deleteOne","update","AddImage","invalidForm","formData","title","description","url","formRef","React","createRef","handleAddImage","newImageData","imageAPI","current","checkValidity","ref","required","project","deleteProject","attachImage","attachSupply","AddProject","hobby","public","completed","dateStarted","targetDate","handleAddProject","newProjectData","projectAPI","rows","cols","supply","wishlist","wishList","ownSupply","AddSupply","paintType","size","color","brand","handleAddSupply","newSupplyData","supplyAPI","SuppliesCard","supplies","map","idx","key","AllSupplies","pullSupply","filter","each","pathname","EditImage","location","handleUpdateImage","updatedImageData","EditProfile","handleUpdateUser","icon","ImageCard","src","width","alt","SupplyTable","tableVisible","hasSupply","supID","result","forEach","s","toggleVisiableClickHandler","own","handleAttachSupply","projectID","types","EditProject","images","handleUpdateProject","projectUpdate","supplyID","boop","imageID","handleAttachImage","Gallery","match","params","Container","Col","LandingPage","getAllUsers","Authorization","showProfile","ProfilePage","userAPI","createdAt","ProjectDetails","handleDeleteProject","ProjectCard","Project","projects","Users","users","ViewImage","handleDeleteImage","Card","style","Img","Body","Title","Text","ViewWishList","handleOwnSupply","handleDeleteSupply","Table","striped","bordered","hover","SupplyDetails","handleWishListSupply","printType","allSupplies","AddWishList","newWishListData","App","updatedUserData","userService","exact","path","render","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e1aa3b65.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\n\nconst NavBar = ({ user, handleLogout }) => {\n  return (\n    <>\n      {user ?\n        <nav>\n          <div><a href={`/profile/${user._id}`} >Welcome, {user.name}</a></div>\n          <div><a href=\"/\">Home</a></div>\n          <div><a href={`/projects/${user._id}`}>Projects</a></div>\n          <div><a href={`/gallery/${user._id}`}>Gallery</a></div>\n          <div><a href=\"/allsupplies\">Supplies</a></div>\n          <div><a href=\"/viewwishlist\">Wish List</a></div>\n          <div id='logout'><a href=\" \" onClick={handleLogout}>Log Out</a></div>\n        </nav>\n        :\n        <Navbar className=\"justify-content-between\">\n          <div><a href=\"/login\" className=\"nav-link\">Log In</a></div>\n          <div><a href=\"/signup\" className=\"nav-link\">Sign Up</a></div>\n        </Navbar>\n      }\n    </>\n  )\n}\n\nexport default NavBar;","function setToken(token) {\n  localStorage.setItem(\"token\", token);\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  getUserFromToken,\n  removeToken,\n};","import tokenService from \"./tokenService\";\n\nconst BASE_URL = '/api/auth/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    console.log(res, '<-- response object')\n    return res.json();\n  })\n  .then(json => {\n    if(json.token) return json;\n    console.log(json, '<-- the error')\n    throw new Error(`${json.err}`)\n  })\n  .then(({ token }) => {\n    tokenService.setToken(token);\n  })\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n  .then((res) => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error(\"Bad Credentials!\");\n  })\n  .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login,\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport authService from \"../../services/authService\";\nimport Form from 'react-bootstrap/Form'\nimport '../../pages/Signup/Signup.css'\n\nclass SignupForm extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage(\"\");\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = async (e) => {\n    const { history, updateMessage, handleSignupOrLogin } = this.props;\n    e.preventDefault();\n    try {\n      await authService.signup(this.state);\n      // Let <App> know a user has signed up!\n      handleSignupOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      updateMessage(err.message);\n    }\n  };\n\n  isFormInvalid() {\n    const { name, email, password, passwordConf } = this.state;\n    return !(name && email && password === passwordConf);\n  }\n\n  render() {\n    const { name, email, password, passwordConf } = this.state;\n    return (\n      <div className='Signup'>\n        <h1>Sign Up</h1>\n        <Form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n          <Form.Label htmlFor=\"name\">Name</Form.Label>\n          <Form.Group controlId=\"name\">\n            <Form.Control\n              type=\"text\"\n              autoComplete=\"off\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Group controlId=\"email\" >\n            <input\n              type=\"text\"\n              autoComplete=\"off\"\n              value={email}\n              name=\"email\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Group controlId=\"password\" >\n            <input\n              type=\"password\"\n              autoComplete=\"off\"\n              value={password}\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Label htmlFor=\"confirm\">Confirm Password</Form.Label>\n          <Form.Group controlId=\"confirm\" >\n            <input\n              type=\"password\"\n              autoComplete=\"off\"\n              value={passwordConf}\n              name=\"passwordConf\"\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <button class=\"btn btn-primary\" disabled={this.isFormInvalid()}>Sign Up</button>\n          &nbsp;&nbsp;\n          <Link to=\"/\">Cancel</Link>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\nimport './Signup.css';\n\nclass Signup extends Component {\n  state = {\n    message: ''\n  }\n\n  updateMessage = (msg) => {\n    this.setState({ message: msg });\n  }\n\n  render() {\n    return (\n      <main>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </main>\n    );\n  }\n}\n\nexport default Signup;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\nimport authService from \"../../services/authService\"\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nclass LoginPage extends Component {\n  state = {\n    email: \"\",\n    pw: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = async (e) => {\n    const { history, handleSignupOrLogin } = this.props;\n    e.preventDefault();\n    try {\n      await authService.login(this.state);\n      // Let <App> know a user has signed up!\n      handleSignupOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      // Use a modal or toast in your apps instead of alert\n      alert('Invalid Credentials!');\n    }\n  };\n\n  render() {\n    const { email, pw } = this.state\n    return (\n      <>\n        <h1 id='login-h1'>Log In</h1>\n        <main className=\"Login\">\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group autoComplete='off' controlId=\"email\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                autoComplete=\"off\"\n                value={email}\n                name=\"email\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group autoComplete='off' controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n                value={pw}\n                name=\"pw\"\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Log In\n  </Button>&nbsp;&nbsp;&nbsp;\n          <Link className=\"btn red\" to=\"/\">\n              Cancel\n          </Link>\n          </Form>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default LoginPage;\n\n","import tokenService from \"./tokenService\";\nconst BASE_URL = \"/api/images/\";\n\nexport function create(image) {\n  return fetch(BASE_URL, {\n      method: \"POST\",\n      headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n      body: JSON.stringify(image)\n  }, { mode: \"cors\" })\n      .then(res => res.json());\n}\n\nexport function getForUser(id) {\n  return fetch(`${BASE_URL}user/${id}`, {\n    // headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n  }, {mode: \"cors\"})\n  .then(res => res.json())\n}\n\nexport function getImage(id){\n  return fetch(`${BASE_URL}${id}`)\n  .then(res => res.json())\n}\n\nexport function deleteOne(id) {\n  return fetch(`${BASE_URL}${id}`, {\n      method: 'DELETE',\n      headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n  }, {mode: \"cors\"})\n  .then(res => res.json());\n}\n\nexport function update(image) {\n  return fetch(`${BASE_URL}${image._id}`, {\n      method: \"PUT\",\n      headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n      body: JSON.stringify(image)\n  }, {mode: \"cors\"})\n  .then(res => res.json());\n}","import React, { Component } from 'react';\nimport * as imageAPI from '../../services/images-api'\nimport Button from 'react-bootstrap/Button'\nimport './AddImage.css'\n\nclass AddImage extends Component {\n  state = {\n    image: {},\n    invalidForm: true,\n    formData: {\n      title: '',\n      description: '',\n      url: '',\n    }\n  }\n\n  formRef = React.createRef()\n\n  handleAddImage = async newImageData => {\n    await imageAPI.create(newImageData)\n      .then(() => this.props.history.push('/gallery'))\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleAddImage(this.state.formData)\n  }\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  }\n\n  render() {\n    const image = this.state.image\n    return (\n      <>\n        <h1>Add an Image</h1>\n        <div className='yellowButton-div'>\n          <Button href={`/gallery/${image.user}`} className='yellowButton' id='button'>\n            Back to Gallery\n                </Button>\n        </div>\n        <form ref={this.formRef} onSubmit={this.handleSubmit}>\n          <div>\n            <label >Image Title</label><br></br>\n            <input name=\"title\" type=\"text\" value={this.state.formData.title} onChange={this.handleChange} required />\n          </div><br></br>\n          <div>\n            <label >Image Description</label><br></br>\n            <input name=\"description\" type=\"text\" value={this.state.formData.description} onChange={this.handleChange} required />\n          </div><br></br>\n          <div>\n            <label >Image Url</label><br></br>\n            <input name=\"url\" type=\"text\" value={this.state.formData.url} onChange={this.handleChange} required />\n          </div>\n          <div className='button-div'>\n            <Button\n              className='greenButton'\n              id='button'\n              type=\"submit\"\n              disabled={this.state.invalidForm}\n            >\n              Add Image\n                    </Button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default AddImage;","import tokenService from \"./tokenService\";\nconst BASE_URL = \"/api/projects/\";\n\nexport function create(project) {\n    return fetch(BASE_URL, {\n        method: \"POST\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(project)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function getAll() {\n    return fetch(BASE_URL, { mode: \"cors\" })\n        .then(res => res.json())\n}\n\nexport function getUserProjects(id) {\n    return fetch(`${BASE_URL}${id}`, {\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    }, { mode: \"cors\" })\n        .then(res => res.json())\n}\n\nexport function projectDetails(id) {\n    return fetch(`${BASE_URL}project/${id}`)\n        .then(res => res.json())\n}\n\nexport function update(project) {\n    return fetch(`${BASE_URL}${project._id}`, {\n        method: \"PUT\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(project)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function deleteProject(id) {\n    return fetch(`${BASE_URL}${id}`, {\n        method: 'DELETE',\n        headers: { 'Authorization': 'Bearer ' + tokenService.getToken() }\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function attachImage(id, project) {\n    return fetch(`${BASE_URL}image/${project}`, {\n        method: \"PUT\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(id)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\nexport function attachSupply(id, project) {\n    return fetch(`${BASE_URL}supply/${project}`, {\n        method: \"PUT\",\n        headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n        body: JSON.stringify(id)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}\n\n","import React, { Component } from 'react'\n//import { Link } from 'react-router-dom';\nimport * as projectAPI from '../../services/projects-api'\n\nclass AddProject extends Component {\n    state = {\n        invalidForm: false,\n        formData: {\n            name: '',\n            hobby: '',\n            public: 'true',\n            description: '',\n            completed: 'false',\n            dateStarted: '',\n            targetDate: ''\n        }\n    }\n    formRef = React.createRef()\n\n    handleAddProject = async newProjectData => {\n        console.log(\"ADDPROJECT\")\n        await projectAPI.create(newProjectData)\n            .then(() => this.props.history.push(`/projects/${this.props.user._id}`))\n        console.log(\"PROJECTADDED\")\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.handleAddProject(this.state.formData)\n    }\n\n    handleChange = e => {\n        const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n        this.setState({\n            formData,\n            invalidForm: !this.formRef.current.checkValidity()\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Add Project</h1>\n                <form className=\"col s12\" ref={this.formRef} onSubmit={this.handleSubmit}>\n                    <div>\n                        <label >Project Name</label><br></br>\n                        <input name=\"name\" type=\"text\" value={this.state.formData.name} onChange={this.handleChange} required />\n                    </div><br />\n                    <div>\n                        <label >Project Description</label><br></br>\n                        <textarea name=\"description\" rows=\"5\" cols=\"30\" value={this.state.formData.description} onChange={this.handleChange} >\n                            Project description...\n                        </textarea>\n                    </div><br />\n                    <div>\n                        <label >Mini Type <br /> (e.g., Games Workshop, Boardgame Mini, etc)</label><br></br>\n                        <input name=\"hobby\" type=\"text\" value={this.state.formData.hobby} onChange={this.handleChange} required />\n                    </div><br />\n                    <div>\n                        <label >Date Started</label><br></br>\n                        <input name=\"dateStarted\" type=\"date\" value={this.state.formData.dateStarted} onChange={this.handleChange} required />\n                    </div><br />\n                    <div>\n                        <label >Target Due Date</label><br></br>\n                        <input name=\"targetDate\" type=\"date\" value={this.state.formData.targetDate} onChange={this.handleChange} required />\n                    </div><br />\n                    <div>\n                        <select name=\"public\" onChange={this.handleChange} value={this.state.formData.public} required>\n                            <option value=\"true\">Public</option>\n                            <option value=\"false\">Private</option>\n                        </select>\n                    </div><br />\n                    <div>\n                        <select name=\"completed\" onChange={this.handleChange} value={this.state.formData.completed} required>\n                            <option value=\"true\">Complete</option>\n                            <option value=\"false\">In Progress</option>\n                        </select>\n                    </div><br />\n                    <button\n                        type=\"submit\"\n                        disabled={this.state.invalidForm}\n                    >\n                        Add Project\n                    </button><br /><br /><br /><br />\n                </form>\n            </>\n        );\n    }\n}\n\nexport default AddProject;\n\n\n\n","import tokenService from \"./tokenService\";\nconst BASE_URL = \"/api/supplies/\";\n\nexport function create(supply) {\n  return fetch(BASE_URL, {\n    method: \"POST\",\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    body: JSON.stringify(supply)\n  }, { mode: \"cors\" })\n    .then(res => res.json());\n}\n\nexport function wishlist(wishlist) {\n  return fetch(`${BASE_URL}wishlist/`, {\n    method: \"POST\",\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    body: JSON.stringify(wishlist)\n  }, { mode: \"cors\" })\n    .then(res => res.json());\n}\n\nexport function getForUser() {\n  return fetch(BASE_URL, {\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n  }, { mode: \"cors\" })\n    .then(res => res.json())\n}\n\nexport function getWishList() {\n  return fetch(`${BASE_URL}wishlist`, {\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n  }, { mode: \"cors\" })\n    .then(res => res.json())\n}\n\nexport function wishList(supply) {\n  return fetch(`${BASE_URL}wishlist/${supply._id}`, {\n    method: \"PUT\",\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    body: JSON.stringify(supply)\n  }, { mode: \"cors\" })\n    .then(res => res.json());\n}\n\nexport function ownSupply(supply) {\n  return fetch(`${BASE_URL}own/${supply._id}`, {\n    method: \"PUT\",\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    body: JSON.stringify(supply)\n  }, { mode: \"cors\" })\n    .then(res => res.json());\n}\n\nexport function deleteOne(supply) {\n  return fetch(`${BASE_URL}${supply._id}`, {\n    method: 'DELETE',\n    headers: { 'Authorization': 'Bearer ' + tokenService.getToken() }\n  }, { mode: \"cors\" })\n    .then(res => res.json());\n}\n\nexport function getAllForUser() {\n  return fetch(`${BASE_URL}all`, {\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n  }, { mode: \"cors\" })\n    .then(res => res.json())\n}","import React, { Component } from 'react'\nimport * as supplyAPI from '../../services/supplies-api'\nimport Button from 'react-bootstrap/Button'\n\nclass AddSupply extends Component {\n  state = {\n    invalidForm: true,\n    formData: {\n      name: '',\n      type: '',\n      paintType: '',\n      size: '',\n      color: '',\n      brand: '',\n    }\n  }\n\n  formRef = React.createRef()\n\n  handleAddSupply = async newSupplyData => {\n    await supplyAPI.create(newSupplyData)\n      .then(() => this.props.history.push('/allsupplies'))\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleAddSupply(this.state.formData)\n  }\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Add Supply</h1>\n        <form ref={this.formRef} onSubmit={this.handleSubmit}>\n          <div>\n            <label >Name</label><br></br>\n            <input name=\"name\" type=\"text\" value={this.state.formData.name} onChange={this.handleChange} required />\n          </div><br></br>\n          <div>\n            <label >Type</label><br></br>\n            <select name=\"type\" onChange={this.handleChange} value={this.state.formData.type} required>\n              <option value=\"\"></option>\n              <option value=\"paint\">Paint</option>\n              <option value=\"tool\">Tool</option>\n              <option value=\"brush\">Brush</option>\n              <option value=\"paintacc\">Paint Accessory</option>\n              <option value=\"material\">Material</option>\n              <option value=\"model\">Model</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div><br></br>\n          {(this.state.formData.type === \"paint\") ?\n            <>\n              <div>\n                <label >Type of Paint</label><br></br>\n                <input name=\"paintType\" type=\"text\" value={this.state.formData.paintType} onChange={this.handleChange} />\n              </div><br></br>\n              <div>\n                <label >Color</label><br></br>\n                <input name=\"color\" type=\"text\" value={this.state.formData.color} onChange={this.handleChange} />\n              </div><br></br>\n\n            </>\n            : <> </>\n          }\n          <div>\n            <label >Size</label><br></br>\n            <input name=\"size\" type=\"text\" value={this.state.formData.size} onChange={this.handleChange} />\n          </div><br></br>\n          <div>\n            <label >Brand</label><br></br>\n            <input name=\"brand\" type=\"text\" value={this.state.formData.brand} onChange={this.handleChange} />\n          </div><br></br>\n          <Button\n            className='greenButton'\n            id='button'\n            type=\"submit\"\n            disabled={this.state.invalidForm}\n          >\n            Add Supply\n                    </Button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default AddSupply;","import React from 'react'\n\nconst SuppliesCard = ({supplies}) => {\n  return (\n    <>\n      {supplies.map((supply, idx) =>\n        <div key={idx}>\n          {supply.name}\n        </div>\n        )}\n    </>\n  );\n}\n \nexport default SuppliesCard;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SuppliesCard from '../../components/SuppliesCard/SuppliesCard'\nimport * as supplyAPI from '../../services/supplies-api'\nimport Button from 'react-bootstrap/Button'\nimport './AllSupplies.css'\n\nclass AllSupplies extends Component {\n  state = {\n    supplies: []\n  }\n\n  async componentDidMount() {\n    const supplies = await supplyAPI.getForUser();\n    this.setState({ supplies })\n  }\n\n  pullSupply = supply => {\n    const list = this.state.supplies.filter(each => each.type === supply)\n    return list\n  }\n\n  render() {\n    return (\n      <>\n        <h1>All Supplies</h1>\n        <div className=\"supply-header\">\n          <Button\n            className=\"greenButton\"\n            id='button'\n            href={'/addsupply'}\n          >\n            Add Supply\n        </Button>\n          <Button\n            className='yellowButton'\n            id='button'\n            href='/viewwishlist'\n          >\n            View Wish List\n        </Button>\n        </div>\n        <div className=\"supply-card-container\">\n          <Link\n            to={{\n              pathname: '/supplydetails/brush'\n            }}\n          >\n            <h3>Brushes</h3>\n            <SuppliesCard\n              supplies={this.pullSupply('brush')}\n            />\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/material'\n            }}\n          >\n            <h3>Materials</h3>\n            <SuppliesCard\n              supplies={this.pullSupply('material')}\n            />\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/model'\n            }}\n          >\n            <h3>Models</h3>\n            <SuppliesCard\n              supplies={this.pullSupply('model')}\n            />\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/other'\n            }}\n          >\n            <h3>Other</h3>\n            <SuppliesCard\n              supplies={this.pullSupply('other')}\n            />\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/paintacc'\n            }}\n          >\n            <h3>Paint Accessories</h3>\n            <SuppliesCard\n              supplies={this.pullSupply('paintacc')}\n            />\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/paint'\n            }}\n          >\n            <h3>View All Paints</h3>\n            <SuppliesCard\n              supplies={this.pullSupply('paint')}\n            />\n          </Link>\n          <Link\n            to={{\n              pathname: '/supplydetails/tool'\n            }}\n          >\n            <h3>Tools</h3>\n            <SuppliesCard\n              supplies={this.pullSupply('tool')}\n            />\n          </Link>\n        </div>\n\n\n      </>\n    );\n  }\n}\n\nexport default AllSupplies;","import React, { Component } from 'react';\nimport * as imageAPI from '../../services/images-api'\nimport Button from 'react-bootstrap/Button'\n\nclass EditImage extends Component {\n  state = {\n    image: {},\n    invalidForm: false,\n    formData: this.props.location.state.image\n  }\n\n  formRef = React.createRef()\n\n  handleUpdateImage = async updatedImageData => {\n    await imageAPI.update(updatedImageData)\n      .then(() => this.props.history.push(`viewimage/${updatedImageData._id}`))\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleUpdateImage(this.state.formData)\n  }\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  }\n\n  render() {\n    const image = this.state.image\n    return (\n      <>\n        <h1>Add an Image</h1>\n        <Button href={`/gallery/${image.user}`} className='yellowButton' id='button'>\n          Back to Gallery\n                </Button>\n        <form className=\"col s12\" ref={this.formRef} onSubmit={this.handleSubmit}>\n          <div>\n            <label >Image Title</label><br></br>\n            <input name=\"title\" type=\"text\" value={this.state.formData.title} onChange={this.handleChange} required />\n          </div><br></br>\n          <div>\n            <label >Image Description</label><br></br>\n            <input name=\"description\" type=\"text\" value={this.state.formData.description} onChange={this.handleChange} required />\n          </div><br></br>\n          <div>\n            <label >Image Url</label><br></br>\n            <input name=\"url\" type=\"text\" value={this.state.formData.url} onChange={this.handleChange} required />\n          </div><br></br>\n          <Button\n            className='purpleButton'\n            id='button'\n            type=\"submit\"\n            disabled={this.state.invalidForm}\n          >\n            Update Image\n                    </Button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default EditImage;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nclass EditProfile extends Component {\n  state = {\n    invalidForm: false,\n    formData: this.props.location.state\n  }\n\n  formRef = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleUpdateUser(this.state.formData);\n  };\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div>\n          <h1>Edit Profile</h1>\n          <form ref={this.formRef} autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label>User Name</label>\n              <input\n                className=\"form-control\"\n                name=\"name\"\n                value={this.state.formData.name}\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>User Icon</label>\n              <input\n                id=\"iconUrl\"\n                name=\"icon\"\n                value={this.state.formData.icon}\n                onChange={this.handleChange}\n              />\n            </div>\n            <button\n              type=\"submit\"\n              disabled={this.state.invalidForm}\n            >\n              Update User\n                    </button>\n            <br />\n\n            <Link\n              to={`/profile/${this.props.location.state._id}`}>\n              CANCEL\n            </Link>\n\n          </form>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default EditProfile;","import React from 'react'\nimport '../../pages/Gallery/Gallery.css'\n\nconst ImageCard = ({ image }) => {\n  return (\n    <div className='image-card'>\n      <h3>{image.title}</h3>\n      <img src={image.url} width=\"300\" alt={image.description}></img>\n    </div>\n  );\n}\n\nexport default ImageCard;","import React, { Component } from 'react'\nimport './SupplyTable.css'\n\nclass SupplyTable extends Component {\n  state = {\n    tableVisible: false\n  }\n\n  hasSupply = (supplies, supID) => {\n    let result = false\n    supplies.forEach(s =>{\n        if (s._id === supID) {\n            result = true\n        }\n    })\n    return result\n  }\n\n  toggleVisiableClickHandler = () => {\n    this.setState((state) => {\n      return {tableVisible: !state.tableVisible}\n    })\n  }\n\n  render() { \n    return (\n      <div>\n        <h4\n          className=\"table-header\"\n          onClick={() => this.toggleVisiableClickHandler()}\n        >{this.props.type}</h4>\n        <div className={this.state.tableVisible ? '' : 'hidden'}>\n        <table >\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Paint Type</th>\n                <th>Color</th>\n                <th>Size</th>\n                <th>Brand</th>\n                <th>On Wish List?</th>\n                <th>Attatch to Project?</th>\n            </tr>\n        </thead>\n        <tbody>\n            {this.props.supplies.map((supply, idx) => \n                    <tr key={idx}>\n                    <td>{supply.name}</td>\n                    <td>{supply.paintType}</td>\n                    <td>{supply.color}</td>\n                    <td>{supply.size}</td>\n                    <td>{supply.brand}</td>\n                    <td>{supply.own ? '' : 'Y'}</td>\n                    <td>{this.hasSupply(this.props.project.supplies, supply._id) ? \n                                \"Attatched\"\n                            :\n                                <button onClick={() => this.props.handleAttachSupply(supply._id, this.props.projectID)}>Attach</button>\n                        }</td>\n                </tr>\n            )}\n        </tbody>\n        </table>\n        </div>\n      </div>\n    );\n  }\n}\n \nexport default SupplyTable;","import React, { Component } from 'react'\nimport * as projectAPI from '../../services/projects-api'\nimport * as imageAPI from '../../services/images-api'\nimport * as suppliesAPI from '../../services/supplies-api'\nimport ImageCard from '../../components/ImageCard/ImageCard'\nimport SupplyTable from '../../components/SupplyTable/SupplyTable'\nimport './EditProject.css'\n\nconst types = [\n    ['paint', 'Paints'], ['brush', 'Brushes'], ['model', 'Modeles'], ['paintacc', 'Paint Accessories'], ['other', 'Other Supplies'], ['tool', 'Tools'], ['material', 'Materials']\n]\n\nclass EditProject extends Component {\n    state = {\n        invalidForm: false,\n        formData: this.props.location.state.project,\n        images: [],\n        project: this.props.location.state.project,\n        supplies: []\n    }\n\n    formRef = React.createRef()\n\n    handleUpdateProject = async projectUpdate => {\n        await projectAPI.update(projectUpdate)\n            .then(() => this.props.history.push(`projectdetails/${projectUpdate._id}`))\n    }\n\n    async componentDidMount() {\n        const images = await imageAPI.getForUser(this.props.user._id);\n        const supplies = await suppliesAPI.getAllForUser();\n        // I don't think the API uses the user id, but if it does - this.props.user._id\n        this.setState({ images, supplies })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.handleUpdateProject(this.state.formData)\n    }\n\n    handleChange = e => {\n        const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n        this.setState({\n            formData,\n            invalidForm: !this.formRef.current.checkValidity()\n        });\n    }\n\n    async handleAttachImage(id, project) {\n        const imageID = { boop: id }\n        await projectAPI.attachImage(imageID, project)\n            .then(() => this.props.history.push(`projectdetails/${project}`))\n    }\n\n    handleAttachSupply = async (id, project) =>{\n        const supplyID = { boop: id }\n        await projectAPI.attachSupply(supplyID, project)\n            .then(() => this.props.history.push(`projectdetails/${project}`))\n        // rather than redirect, say on this page, but we will need to manually add the supply to the project in state, since componentDidMount will not file again\n        // The following code has been tested to work:\n        // const supply = this.state.supplies.find(s => s._id === id)\n        // const updatedProject = this.state.project\n        // updatedProject.supplies.push(supply)\n        // this.setState({ project: updatedProject })\n    }\n\n    hasSupply = (supplies, supID) => {\n        let result = false\n        supplies.forEach(s =>{\n            if (s._id === supID) {\n                result = true\n            }\n        })\n        return result\n    }\n\n    pullSupply = supply => {\n        const list = this.state.supplies.filter(each => each.type === supply)\n        return list\n    }\n\n    render() {\n        const projectID = this.state.formData._id\n        return (\n            <>\n                <h1>Edit Project</h1>\n                <div>\n                    <form ref={this.formRef} onSubmit={this.handleSubmit}>\n                        <div>\n                            <label >Project Name</label><br></br>\n                            <input name=\"name\" type=\"text\" value={this.state.formData.name} onChange={this.handleChange} required />\n                        </div><br />\n                        <div>\n                            <label >Project Description</label><br></br>\n                            <textarea name=\"description\" rows=\"5\" cols=\"30\" value={this.state.formData.description} onChange={this.handleChange} >\n                                Project description...\n                        </textarea>\n                        </div><br />\n                        <div>\n                            <label >Mini Type <br /> (e.g., Games Workshop, Boardgame Mini, etc)</label><br></br>\n                            <input name=\"hobby\" type=\"text\" value={this.state.formData.hobby} onChange={this.handleChange} required />\n                        </div><br />\n                        <div>\n                            <label >Date Started</label><br></br>\n                            <input name=\"dateStarted\" type=\"date\" value={this.state.formData.dateStarted} onChange={this.handleChange} required />\n                        </div><br />\n                        <div>\n                            <label >Target Due Date</label><br></br>\n                            <input name=\"targetDate\" type=\"date\" value={this.state.formData.targetDate} onChange={this.handleChange} required />\n                        </div><br />\n                        <div>\n                            <select name=\"public\" onChange={this.handleChange} value={this.state.formData.public} required>\n                                <option value=\"true\">Public</option>\n                                <option value=\"false\">Private</option>\n                            </select>\n                        </div><br />\n                        <div>\n                            <select name=\"completed\" onChange={this.handleChange} value={this.state.formData.completed} required>\n                                <option value=\"true\">Complete</option>\n                                <option value=\"false\">In Progress</option>\n                            </select>\n                        </div><br />\n                        <button\n                            type=\"submit\"\n                            disabled={this.state.invalidForm}\n                        >\n                            Update Project\n                    </button><br /><br /><br /><br />\n                    </form>\n\n\n                </div>\n                {/* <div>\n                    <h2>Project Images</h2>\n                    <div>\n                        {this.props.location.state.project.images.map((image, idx) =>\n                            <img key={idx} width=\"100\" src={image.url} alt=\"\" />\n                        )}\n                    </div>\n                </div> */}\n                <h2>Attatch Supplies</h2>\n                <div className=\"attatch-supplies-container\">\n                    <div>\n                    {types.map((type, idx) => \n                        <div key={idx}>\n                            <SupplyTable \n                                type={type[1]}\n                                supplies={this.pullSupply(type[0])}\n                                projectID={projectID}\n                                project={this.state.project}\n                                handleAttachSupply={this.handleAttachSupply}\n                            />\n                        {/* <h3>{type[1]}</h3>\n                        <table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Paint Type</th>\n                                <th>Color</th>\n                                <th>Size</th>\n                                <th>Brand</th>\n                                <th>On Wish List?</th>\n                                <th>Attatch to Project?</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.pullSupply(type[0]).map((supply, idx) => \n                                    <tr key={idx}>\n                                    <td>{supply.name}</td>\n                                    <td>{supply.paintType}</td>\n                                    <td>{supply.color}</td>\n                                    <td>{supply.size}</td>\n                                    <td>{supply.brand}</td>\n                                    <td>{supply.own ? '' : 'Y'}</td>\n                                    <td>{this.hasSupply(this.state.project.supplies, supply._id) ? \n                                                \"Attatched\"\n                                            :\n                                                <button onClick={() => this.handleAttachSupply(supply._id, projectID)}>Attach</button>\n                                        }</td>\n                                </tr>\n                            )}\n                        </tbody>\n                       </table> */}\n                       </div>\n                        )}\n                    \n                    </div>\n                </div>\n                <div>\n                    <h2>User's Images</h2>\n                    {this.state.images.map((image, idx) =>\n                        <div key={idx}>\n                            <ImageCard\n                                image={image}\n                            />\n                            <button type=\"submit\" onClick={() => this.handleAttachImage(image._id, projectID)}>\n                                Add Image to Project\n                            </button>\n\n                        </div>\n                    )}\n                </div>\n\n            </>\n        );\n    }\n}\n\nexport default EditProject;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport * as imageAPI from '../../services/images-api'\nimport ImageCard from '../../components/ImageCard/ImageCard'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport './Gallery.css'\n\nclass Gallery extends Component {\n  state = {\n    images: []\n  }\n\n  async componentDidMount() {\n    const images = await imageAPI.getForUser(this.props.match.params.id);\n    this.setState({ images })\n  }\n\n  render() {\n    const user = this.props.user\n    return (\n      <>\n        <h1>Gallery</h1>\n        {user && (user._id === this.props.match.params.id) &&\n          <>\n            <div className=\"addImage-div\">\n              <Button\n                className=\"greenButton\"\n                id='button'\n                href=\"/addimage\"\n              >\n                Add Image\n                </Button>\n            </div>\n          </>}\n        <Container>\n          {this.state.images.map((image, idx) =>\n            <Col key={image.idx}>\n              <Link\n                to={{\n                  pathname: `/viewimage/${image._id}`\n                }}\n              >\n                <ImageCard\n                  className=\"card\"\n                  image={image}\n                />\n              </Link>\n            </Col>\n          )}\n        </Container>\n        {/* <Link to=\"/wiewimage\">\n                    View Image\n                </Link><br />\n                <Link to=\"/editimage\">\n                    Edit Image\n                </Link><br /> */}\n      </>\n    );\n  }\n}\n\nexport default Gallery;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass LandingPage extends Component {\n  state = {}\n  render() {\n    return (\n      <>\n        <h1>Landing</h1>\n        <Link to=\"/profile/:id\">\n          Profile Page\n                </Link><br />\n        <Link to=\"/projects\">\n          Projects\n                </Link><br />\n        <Link to=\"/viewwishlist\">\n          Wish List\n                </Link><br />\n        <Link to=\"/allsupplies\">\n          Supplies\n                </Link><br />\n        <Link to=\"/gallery\">\n          Gallery\n                </Link><br />\n        <Link to=\"/users\">\n          Users\n                </Link><br />\n      </>\n    );\n  }\n}\n\n\n\nexport default LandingPage;","import tokenService from \"../services/tokenService\";\nconst BASE_URL = \"/api/users/\";\n\nexport function getAllUsers() {\n  return fetch(\n    BASE_URL,\n    {\n      headers: { Authorization: \"Bearer \" + tokenService.getToken() },\n    },\n    { mode: \"cors\" }\n  ).then((res) => res.json());\n}\n\nexport function update(user) {\n  return fetch(`${BASE_URL}${user._id}`, {\n    method: 'PUT',\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() },\n    body: JSON.stringify(user)\n  }, { mode: \"cors\" })\n    .then((res) => res.json())\n}\n\nexport function showProfile(id) {\n  return fetch(`${BASE_URL}${id}`, {\n    headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken() }\n  })\n    .then((res) => res.json())\n}\n\nexport default {\n  getAllUsers,\n  update,\n  showProfile\n};","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport * as userAPI from '../../services/userService'\n\nclass ProfilePage extends Component {\n  state = { \n    user: {}\n  }\n\n  async componentDidMount() {\n    const user = await userAPI.showProfile(this.props.match.params.id);\n    this.setState({ user })\n  }\n\n  render() { \n    const user = this.props.user\n    return (\n      <>\n      <div>\n        {/* <h1>Welcome, {this.props.user.name}</h1> */}\n        \n          <img src={this.state.user.icon} alt=\"User Icon\" width=\"150\"></img>\n          <p>Name: {this.state.user.name}</p>\n          <p>Member Since: {this.state.user.createdAt}</p>\n          <Link to={`/projects/${this.state.user._id}`}>Projects</Link><br></br>\n          <br></br>\n          {user && (user._id === this.state.user._id) &&\n            <Link \n            to={{\n              pathname: \"/editprofile\",\n              state: this.props.user\n            }}\n            >\n              Edit Profile\n            </Link>\n          }\n        \n        <br />\n        \n        <br />\n        {/* <Link to=\"/allsupplies\">Supplies</Link> */}\n        <br />\n      </div>\n    </>\n    );\n  }\n}\n \nexport default ProfilePage;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport * as projectAPI from '../../services/projects-api'\nimport authService from '../../services/authService'\nimport './ProjectDetails.css'\n\nclass ProjectDetails extends Component {\n    state = {\n        project: {\n            images: [],\n            supplies: []\n        }\n    }\n\n    async componentDidMount() {\n        const project = await projectAPI.projectDetails(this.props.match.params.id)\n        this.setState({ project })\n    }\n\n    handleDeleteProject = async id => {\n        if (authService.getUser()) {\n            await projectAPI.deleteProject(id)\n                .then(() => this.props.history.push('/projects'));\n        } else {\n            this.props.history.push('/login')\n        }\n    }\n\n    render() {\n        const project = this.state.project\n        const user = this.props.user\n        return (\n            <>\n                <div className=\"editProject-container\">\n                    <h1>{project.name}</h1>\n                    <p>Description: {project.description}</p>\n                    <p>Hobby: {project.hobby}</p>\n                    <p>Date Started: {project.dateStarted}</p>\n                    {/* consider adding a function to turn the date string from 2020-10-03 to 10-03-2020 */}\n                </div>\n                <div className=\"editProject-container\">\n                    <h2>Project Supplies</h2>\n                    {this.state.project.supplies.map((supply, idx) =>\n                        <div key={idx} className={supply.own ? 'black' : 'grey'} >\n                            <p>Type: {supply.type}< br />\n                                Name: {supply.name}< br />\n                                Brand: {supply.brand}</p>\n                        </div>\n                    )}\n                </div>\n                <div className=\"editProject-container\">\n                    <h2>Project Images</h2>\n                    {this.state.project.images.map((images, idx) =>\n                        <img key={idx} width=\"100\" src={this.state.project.images[idx].url} alt=\"\" />\n                    )}\n                </div>\n                {user && (user._id === project.user) &&\n                    <div className=\"edit-delete-container\">\n                        <Link\n                            to={{\n                                pathname: '/editproject',\n                                state: { project },\n                            }}\n                        >\n                            Edit Project\n                            </Link><br></br>\n                        <button type=\"submit\" onClick={() => this.handleDeleteProject(project._id)} className=\"edit-delete-container\">\n                            Delete Project\n                            </button><br></br>\n                    </div>\n                }\n            </>\n        );\n    }\n}\n\nexport default ProjectDetails;","import React from 'react'\n\nconst ProjectCard = ({ project }) => {\n    return (\n        <div>\n            <h3>{project.name}</h3>\n            {/* <p>Description: {project.description}</p> */}\n            {/* <p>Public? {project.public}</p> */}\n            {/* <p>Hobby: {project.hobby}</p> */}\n            {/* <p>Date Started: {project.dateStarted}</p> */}\n            {/* <p>Due Date: {project.targetDate}</p> */}\n            {/* <p>Complete? {project.completed}</p> */}\n        </div>\n    );\n}\n\n\nexport default ProjectCard;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport * as projectAPI from '../../services/projects-api'\nimport ProjectCard from '../../components/ProjectCard/ProjectCard'\nimport Button from 'react-bootstrap/Button'\nimport './Projects.css';\n\nclass Project extends Component {\n  state = {\n    projects: []\n  }\n\n  async componentDidMount() {\n    const projects = await projectAPI.getUserProjects(this.props.match.params.id);\n    this.setState({ projects })\n  }\n\n  render() {\n    return (\n      <>\n        <h1>My Projects</h1>\n        <div className=\"addProject\">\n          <Button href=\"/addproject\" className=\"greenButton\" id='button'>\n            Add a Project\n                </Button><br />\n        </div>\n        <div className=\"project-card\">\n          {this.state.projects.map((project, idx) =>\n            <Link\n              key={idx}\n              to={{\n                pathname: `/projectdetails/${project._id}`\n              }}\n            >\n              <ProjectCard\n                project={project}\n              />\n            </Link>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Project;","import React, { Component } from \"react\";\nimport { getAllUsers } from \"../../services/userService\";\nimport { Link } from 'react-router-dom';\n\nclass Users extends Component {\n  state = {\n    users: [],\n  };\n\n  async componentDidMount() {\n    const users = await getAllUsers();\n    this.setState({ users });\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Hello. This is a list of all the users.</h1>\n        {this.state.users.map((user) => (\n          <Link\n            key={user.id}\n            to={{\n              pathname: `profile/${user._id}`,\n            }}\n          ><p>{user.name}</p></Link>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default Users;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as imageAPI from '../../services/images-api'\nimport authService from '../../services/authService'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport './ViewImage.css'\n\nclass ViewImage extends Component {\n  state = {\n    image: {},\n  }\n\n  async componentDidMount() {\n    const image = await imageAPI.getImage(this.props.match.params.id)\n    this.setState({ image })\n  }\n\n  handleDeleteImage = async id => {\n    if (authService.getUser()) {\n      await imageAPI.deleteOne(id)\n        .then(() => this.props.history.push('/gallery'));\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n\n  render() {\n    const image = this.state.image\n    const user = this.props.user\n    return (\n      <>\n        <div className='yellowButton-div'>\n          <Button href={`/gallery/${image.user}`} className='yellowButton' id='button'>\n            Back to Gallery\n                </Button>\n        </div>\n\n\n        {user && (user._id === image.user) &&\n          <div className='card-container'>\n            <Card style={{ width: '28rem' }} className='imgCard'>\n              <Card.Img variant=\"top\" src={image.url} width=\"300\" alt={image.description}></Card.Img>\n              <Card.Body>\n                <Card.Title>{image.title}</Card.Title>\n                <Card.Text><p>{image.description}</p></Card.Text>\n                <div className='button-divs'>\n                  <Button type=\"submit\" onClick={() => this.handleDeleteImage(image._id)} className='redButton' id='button'>\n                    Delete Image\n                            </Button>\n\n                  <Link\n                    className='purpleButton'\n                    id='button'\n                    to={{\n                      pathname: '/editimage',\n                      state: { image }\n                    }}\n                  >\n                    Edit Image\n                            </Link>\n                </div>\n              </Card.Body>\n            </Card>\n          </div>\n        }\n      </>\n    );\n  }\n}\n\nexport default ViewImage;\n","import React, { Component } from 'react'\nimport * as supplyAPI from '../../services/supplies-api'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport './ViewWishList.css'\n\nclass ViewWishList extends Component {\n  state = {\n    wishList: []\n  }\n\n  async componentDidMount() {\n    const wishList = await supplyAPI.getWishList();\n    this.setState({ wishList })\n  }\n\n  handleOwnSupply = async supply => {\n    await supplyAPI.ownSupply(supply)\n    this.setState(state => ({\n      wishList: state.wishList.filter(s => s._id !== supply._id)\n    }))\n  }\n\n  handleDeleteSupply = async supply => {\n    await supplyAPI.deleteOne(supply)\n    this.setState(state => ({\n      wishList: state.wishList.filter(s => s._id !== supply._id)\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Supply Wish List</h1>\n        <div className=\"wish-button-div\">\n          <Button\n            className=\"greenButton\"\n            id='button'\n            href={'/addwishlist'}\n          >\n            Add to Wish List\n        </Button>\n        </div>\n        <div className='table-div'>\n          <Table striped bordered hover size='sm' variant='light' className='table'>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Paint Type</th>\n                <th>Color</th>\n                <th>Size</th>\n                <th>Brand</th>\n                <th>Own?</th>\n                <th>Remove?</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.wishList.map((supply, idx) =>\n                <tr key={idx}>\n                  <td>{supply.name}</td>\n                  <td>{supply.type}</td>\n                  <td>{supply.paintType}</td>\n                  <td>{supply.color}</td>\n                  <td>{supply.size}</td>\n                  <td>{supply.brand}</td>\n                  <td id='irisbutton-td'><Button onClick={() => this.handleOwnSupply(supply)} className='irisButton' id='button'>Own Supply</Button></td>\n                  <td id='redbutton-td'><Button onClick={() => this.handleDeleteSupply(supply)} className='redButton' id='button'>Remove</Button></td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ViewWishList;","import React, { Component } from 'react';\nimport * as supplyAPI from '../../services/supplies-api'\nimport './SupplyDetails.css'\nimport Table from 'react-bootstrap/Table'\n\nconst types = [\n  ['paint', 'Paint'], ['brush', 'Brush'], ['model', 'Model'], ['paintacc', 'Paint Accessory'], ['other', 'Other Supply'], ['tool', 'Tool'], ['material', 'Material']\n]\n\nclass SupplyDetails extends Component {\n  state = {\n    supplies: []\n  }\n\n  async componentDidMount() {\n    const allSupplies = await supplyAPI.getForUser();\n    const supplies = allSupplies.filter(each => each.type === this.props.match.params.supply)\n    this.setState({ supplies })\n  }\n\n  handleWishListSupply = async supply => {\n    await supplyAPI.wishList(supply)\n    this.setState(state => ({\n      supplies: state.supplies.filter(s => s._id !== supply._id)\n    }))\n  }\n\n  handleDeleteSupply = async supply => {\n    await supplyAPI.deleteOne(supply)\n    this.setState(state => ({\n      supplies: state.supplies.filter(s => s._id !== supply._id)\n    }))\n  }\n\n  printType = type => {\n    let result\n    types.forEach(each => {\n      if (each[0] === type) {\n        result = each[1]\n      }\n    })\n    return result\n  }\n\n  render() {\n    const type = this.printType(this.props.match.params.supply)\n    return (\n      <>\n        <h1>{type} Details</h1>\n        <div className='table-div'>\n          <Table striped bordered hover size='sm' variant='light'>\n            <thead>\n              <tr>\n                <th>Name</th>\n                {this.props.match.params.supply === 'paint' &&\n                  <>\n                    <th>Paint Type</th>\n                    <th>Color</th>\n                  </>\n                }\n                <th>Size</th>\n                <th>Brand</th>\n                <th>Wish List?</th>\n                <th>Remove?</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.supplies.map((supply, idx) =>\n                <tr key={idx}>\n                  <td>{supply.name}</td>\n                  {this.props.match.params.supply === 'paint' &&\n                    <>\n                      <td>{supply.paintType}</td>\n                      <td>{supply.color}</td>\n                    </>\n                  }\n                  <td>{supply.size}</td>\n                  <td>{supply.brand}</td>\n                  <td id='irisbutton-td'><button onClick={() => this.handleWishListSupply(supply)} className='irisButton' id='button'>Wish List</button></td>\n                  <td id='redbutton-td'><button onClick={() => this.handleDeleteSupply(supply)} className='redButton' id='button'>Remove</button></td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SupplyDetails;","import React, { Component } from 'react'\nimport * as supplyAPI from '../../services/supplies-api'\nimport Button from 'react-bootstrap/Button'\nimport './AddWishList.css'\n\nclass AddWishList extends Component {\n  state = {\n    invalidForm: true,\n    formData: {\n      name: '',\n      type: '',\n      paintType: '',\n      size: '',\n      color: '',\n      brand: '',\n    }\n  }\n\n  formRef = React.createRef()\n\n  handleAddSupply = async newWishListData => {\n    await supplyAPI.wishlist(newWishListData)\n      .then(() => this.props.history.push('/viewwishlist'))\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleAddSupply(this.state.formData)\n  }\n\n  handleChange = e => {\n    const formData = { ...this.state.formData, [e.target.name]: e.target.value };\n    this.setState({\n      formData,\n      invalidForm: !this.formRef.current.checkValidity()\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Add to Wish List</h1>\n        <form ref={this.formRef} onSubmit={this.handleSubmit}>\n          <div>\n            <label >Name</label><br></br>\n            <input name=\"name\" type=\"text\" value={this.state.formData.name} onChange={this.handleChange} required />\n          </div><br></br>\n          <div>\n            <label >Type</label><br></br>\n            <select name=\"type\" onChange={this.handleChange} value={this.state.formData.type} required>\n              <option value=\"\"></option>\n              <option value=\"paint\">Paint</option>\n              <option value=\"tool\">Tool</option>\n              <option value=\"brush\">Brush</option>\n              <option value=\"paintacc\">Paint Accessory</option>\n              <option value=\"material\">Material</option>\n              <option value=\"model\">Model</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div><br></br>\n          {this.state.formData.type === \"paint\" &&\n            <>\n              <div>\n                <label >Type of Paint</label><br></br>\n                <input name=\"paintType\" type=\"text\" value={this.state.formData.paintType} onChange={this.handleChange} />\n              </div><br></br>\n              <div>\n                <label >Color</label><br></br>\n                <input name=\"color\" type=\"text\" value={this.state.formData.color} onChange={this.handleChange} />\n              </div><br></br>\n\n            </>\n          }\n          <div>\n            <label >Size</label><br></br>\n            <input name=\"size\" type=\"text\" value={this.state.formData.size} onChange={this.handleChange} />\n          </div><br></br>\n          <div>\n            <label >Brand</label><br></br>\n            <input name=\"brand\" type=\"text\" value={this.state.formData.brand} onChange={this.handleChange} />\n          </div>\n          <div className='button-div'>\n            <Button\n              className='greenButton'\n              id='button'\n              type=\"submit\"\n              disabled={this.state.invalidForm}\n            >\n              Add to Wish List\n            </Button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default AddWishList;","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport Signup from \"../Signup/Signup\";\nimport Login from \"../Login/Login\";\nimport authService from \"../../services/authService\";\nimport \"./App.css\";\nimport AddImage from '../AddImage/AddImage'\nimport AddProject from '../AddProject/AddProject'\nimport AddSupply from '../AddSupply/AddSupply'\nimport AllSupplies from '../AllSupplies/AllSupplies'\nimport EditImage from '../EditImage/EditImage'\nimport EditProfile from '../EditProfile/EditProfile'\nimport EditProject from '../EditProject/EditProject'\nimport Gallery from '../Gallery/Gallery'\nimport LandingPage from '../LandingPage/LandingPage'\nimport ProfilePage from '../ProfilePage/ProfilePage'\nimport ProjectDetails from '../ProjectDetails/ProjectDetails'\nimport Projects from '../Projects/Projects'\nimport Users from '../Users/Users'\nimport ViewImage from '../ViewImage/ViewImage'\nimport ViewWishList from '../ViewWishList/ViewWishList'\nimport SupplyDetails from '../SupplyDetails/SupplyDetails'\nimport AddWishList from '../AddWishList/AddWishList'\nimport userService from '../../services/userService'\n\nclass App extends Component {\n  state = {\n    user: authService.getUser(),\n  };\n\n  handleUpdateUser = async updatedUserData => {\n    await userService.update(updatedUserData)\n    this.setState({ user: authService.getUser() })\n    this.props.history.push(`profile/${updatedUserData._id}`)\n      // .then(() => this.props.history.push(`profile/${updatedUserData._id}`))\n  }\n\n  handleLogout = () => {\n    authService.logout();\n    this.setState({ user: null });\n  };\n\n  handleSignupOrLogin = () => {\n    this.setState({ user: authService.getUser() });\n  };\n\n  render() {\n    const { user } = this.state\n    return (\n      <>\n        <NavBar user={user} handleLogout={this.handleLogout} />\n        <main>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <LandingPage />\n            )}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            render={({ history }) => (\n              <Signup\n                history={history}\n                handleSignupOrLogin={this.handleSignupOrLogin}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={({ history }) => (\n              <Login\n                history={history}\n                handleSignupOrLogin={this.handleSignupOrLogin}\n              />\n            )}\n          />\n          <Route\n\n\n            exact\n            path=\"/addimage\"\n            render={({ history }) => (\n              <AddImage\n                user={this.state.user}\n                history={history}\n              />\n            )}\n\n\n          />\n          <Route\n            exact\n            path=\"/addproject\"\n\n            render={({ history }) => (\n              <AddProject\n                history={history}\n                user={this.state.user}\n              />\n\n            )}\n          />\n          <Route\n            exact\n            path=\"/addsupply\"\n            render={({ history }) => (\n              <AddSupply\n                history={history}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/addwishlist\"\n            render={({ history }) => (\n              <AddWishList\n                history={history}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/allsupplies\"\n            render={() => (\n              <AllSupplies />\n            )}\n          />\n          <Route\n            exact\n            path=\"/editimage\"\n            render={({ location, history }) => (\n              <EditImage\n                location={location}\n                history={history}\n                user={this.state.user}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/editprofile\"\n            render={({ location, history }) => (\n              <EditProfile\n                history={history}\n                location={location}\n                handleUpdateUser={this.handleUpdateUser}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/editproject\"\n            render={({ history, location }) => (\n              <EditProject\n                history={history}\n                location={location}\n                user={this.state.user}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/gallery/:id\"\n            render={({match}) => (\n              <Gallery \n                match={match}\n                user={this.state.user}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/profile/:id\"\n\n            render={({ match }) => authService.getUser() ?\n              <ProfilePage\n                user={this.state.user}\n                match={match}\n              />\n              :\n              <Redirect to='/login' />\n            }\n\n          />\n          <Route\n            exact\n            path=\"/projectdetails/:id\"\n            render={({ match, history }) => (\n              <ProjectDetails\n                match={match}\n                history={history}\n                user={this.state.user}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/projects/:id\"\n            render={({match}) => (\n              <Projects\n                match={match}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/supplydetails/:supply\"\n            render={({ match }) => (\n              <SupplyDetails\n                match={match}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/viewimage/:id\"\n\n            render={({ match, history }) => (\n\n\n              <ViewImage\n                match={match}\n                history={history}\n                user={this.state.user}\n              />\n            )}\n          />\n          \n          <Route\n            exact\n            path=\"/viewwishlist\"\n            render={() => (\n              <ViewWishList />\n            )}\n          />\n          <Route\n            path=\"/users\"\n            render={() => (\n              <Users />\n            )}\n          />\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Route render={({ history }) => <App history={history} />} />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}